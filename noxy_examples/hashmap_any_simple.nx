// ============================================
// HASHMAP BÁSICO PARA NOXY - VERSÃO FUNCIONAL
// ============================================

// Estrutura básica para valores
struct Value
    type: int,           // 1=string, 2=number, 3=boolean
    string_val: string,
    number_val: float,
    bool_val: bool
end

// Estrutura para par chave-valor
struct Pair
    key: string,
    val: Value
end

// Estrutura HashMap básica
struct HashMap
    data: Pair[8],       // Array de 8 pares
    count: int           // Número de pares
end

// Variáveis globais para o HashMap
let global_hashmap_data: Pair[8] = [Pair("", Value(0, "", 0.0, false)), Pair("", Value(0, "", 0.0, false)), Pair("", Value(0, "", 0.0, false)), Pair("", Value(0, "", 0.0, false)), Pair("", Value(0, "", 0.0, false)), Pair("", Value(0, "", 0.0, false)), Pair("", Value(0, "", 0.0, false)), Pair("", Value(0, "", 0.0, false))]
let global_hashmap_count: int = 0

// Função para criar um valor string
func make_string(s: string) -> Value
    return Value(1, s, 0.0, false)
end

// Função para criar um valor number
func make_number(n: float) -> Value
    return Value(2, "", n, false)
end

// Função para criar um valor boolean
func make_bool(b: bool) -> Value
    return Value(3, "", 0.0, b)
end

// Função para limpar o HashMap global
func clear_hashmap() -> void
    global_hashmap_count = 0
end

// Função para adicionar ao HashMap global
func put_global(k: string, v: Value) -> void
    if global_hashmap_count < 8 then
        global_hashmap_data[global_hashmap_count] = Pair(k, v)
        global_hashmap_count = global_hashmap_count + 1
    end
end

// Função para imprimir valor
func print_val(v: Value) -> void
    if v.type == 1 then
        print(v.string_val)
    end
    if v.type == 2 then
        print(to_str(v.number_val))
    end
    if v.type == 3 then
        if v.bool_val then
            print("true")
        else
            print("false")
        end
    end
end

// Função para imprimir o HashMap global (versão simplificada)
func print_hashmap() -> void
    print("{")
    let i: int = 0
    while i < global_hashmap_count do
        if i > 0 then
            print(",")
        end
        let p: Pair = global_hashmap_data[i]
        print("\"" + p.key + "\": ")
        // Acessar campos do valor diretamente
        if p.val.type == 1 then
            print("\"" + p.val.string_val + "\"")
        end
        if p.val.type == 2 then
            print(to_str(p.val.number_val))
        end
        if p.val.type == 3 then
            if p.val.bool_val then
                print("true")
            else
                print("false")
            end
        end
        i = i + 1
    end
    print("}")
end

// Programa principal
print("=== HASHMAP BÁSICO PARA NOXY ===")
print("")

clear_hashmap()
print("HashMap limpo e pronto para uso!")

// Adicionar valores
put_global("nome", make_string("João"))
put_global("idade", make_number(30.0))
put_global("ativo", make_bool(true))
put_global("cidade", make_string("São Paulo"))

print("Valores adicionados com sucesso!")
print("")

// Mostrar o HashMap completo
print("HashMap atual:")
print_hashmap()
print("")

// Mostrar valores diretamente (sem busca)
print("=== VALORES ADICIONADOS ===")
print("Nome: João")
print("Idade: 30")
print("Ativo: true")
print("Cidade: São Paulo")
print("")

print("=== TESTE CONCLUÍDO COM SUCESSO ===")
print("HashMap implementado com sucesso!")
print("Estrutura pronta para uso no parser JSON!")