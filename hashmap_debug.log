Lendo arquivo: noxy_examples/json_hashmap_demo.nx
=== LLVM IR Gerado ===
; ModuleID = "noxy_module"
target triple = "x86_64-w64-windows-gnu"
target datalayout = "e-m:w-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"

declare external ccc i32 @"printf"(i8* %".1", ...)

declare external ccc i32 @"wprintf"(i16* %".1", ...)

declare external ccc i32 @"_setmode"(i32 %".1", i32 %".2")

declare external ccc i32 @"SetConsoleOutputCP"(i32 %".1")

declare external ccc i8* @"malloc"(i64 %".1")

declare external ccc void @"free"(i8* %".1")

declare external ccc i64 @"strlen"(i8* %".1")

declare external ccc i8* @"strcpy"(i8* %".1", i8* %".2")

declare external ccc i8* @"strcat"(i8* %".1", i8* %".2")

declare external ccc i32 @"strcmp"(i8* %".1", i8* %".2")

declare external ccc i32 @"sprintf"(i8* %".1", i8* %".2", ...)

declare external ccc i8* @"to_str_int"(i64 %".1")

declare external ccc i8* @"to_str_float"(double %".1")

declare external ccc i8* @"array_to_str_int"(i64* %".1", i64 %".2")

declare external ccc i8* @"array_to_str_float"(double* %".1", i64 %".2")

declare external ccc i64 @"to_int"(double %".1")

declare external ccc double @"to_float"(i64 %".1")

declare external ccc i8* @"char_to_str"(i8 %".1")

declare double @"fmod"(double %".1", double %".2")

@"TYPE_NULL" = internal global i64 0
@"TYPE_STRING" = internal global i64 0
@"TYPE_NUMBER" = internal global i64 0
@"TYPE_BOOLEAN" = internal global i64 0
@"TYPE_OBJECT" = internal global i64 0
@"TYPE_ARRAY" = internal global i64 0
@"main_hashmap" = internal global {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}* null
@"user_hashmap" = internal global {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}* null
@"items_array" = internal global {{i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, i64}* null
define {i64, i8*, double, i1, i64, i64}* @"make_string"(i8* %"s")
{
entry:
  %"s.1" = alloca i8*
  store i8* %"s", i8** %"s.1"
  %".4" = getelementptr {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* null, i32 1
  %".5" = ptrtoint {i64, i8*, double, i1, i64, i64}* %".4" to i64
  %".6" = call ccc i8* @"malloc"(i64 %".5")
  %".7" = bitcast i8* %".6" to {i64, i8*, double, i1, i64, i64}*
  %"TYPE_STRING" = load i64, i64* @"TYPE_STRING"
  %".8" = getelementptr {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %".7", i32 0, i32 0
  store i64 %"TYPE_STRING", i64* %".8"
  %"s.2" = load i8*, i8** %"s.1"
  %".10" = getelementptr {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %".7", i32 0, i32 1
  store i8* %"s.2", i8** %".10"
  %".12" = getelementptr {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %".7", i32 0, i32 2
  store double              0x0, double* %".12"
  %".14" = getelementptr {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %".7", i32 0, i32 3
  store i1 false, i1* %".14"
  %"sub" = sub i64 0, 1
  %".16" = getelementptr {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %".7", i32 0, i32 4
  store i64 %"sub", i64* %".16"
  %"sub.1" = sub i64 0, 1
  %".18" = getelementptr {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %".7", i32 0, i32 5
  store i64 %"sub.1", i64* %".18"
  ret {i64, i8*, double, i1, i64, i64}* %".7"
}

define {i64, i8*, double, i1, i64, i64}* @"make_number"(double %"n")
{
entry:
  %"n.1" = alloca double
  store double %"n", double* %"n.1"
  %".4" = getelementptr {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* null, i32 1
  %".5" = ptrtoint {i64, i8*, double, i1, i64, i64}* %".4" to i64
  %".6" = call ccc i8* @"malloc"(i64 %".5")
  %".7" = bitcast i8* %".6" to {i64, i8*, double, i1, i64, i64}*
  %"TYPE_NUMBER" = load i64, i64* @"TYPE_NUMBER"
  %".8" = getelementptr {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %".7", i32 0, i32 0
  store i64 %"TYPE_NUMBER", i64* %".8"
  %".10" = getelementptr inbounds [1 x i8], [1 x i8]* @"str_116", i32 0, i32 0
  %".11" = getelementptr {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %".7", i32 0, i32 1
  store i8* %".10", i8** %".11"
  %"n.2" = load double, double* %"n.1"
  %".13" = getelementptr {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %".7", i32 0, i32 2
  store double %"n.2", double* %".13"
  %".15" = getelementptr {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %".7", i32 0, i32 3
  store i1 false, i1* %".15"
  %"sub" = sub i64 0, 1
  %".17" = getelementptr {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %".7", i32 0, i32 4
  store i64 %"sub", i64* %".17"
  %"sub.1" = sub i64 0, 1
  %".19" = getelementptr {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %".7", i32 0, i32 5
  store i64 %"sub.1", i64* %".19"
  ret {i64, i8*, double, i1, i64, i64}* %".7"
}

define {i64, i8*, double, i1, i64, i64}* @"make_boolean"(i1 %"b")
{
entry:
  %"b.1" = alloca i1
  store i1 %"b", i1* %"b.1"
  %".4" = getelementptr {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* null, i32 1
  %".5" = ptrtoint {i64, i8*, double, i1, i64, i64}* %".4" to i64
  %".6" = call ccc i8* @"malloc"(i64 %".5")
  %".7" = bitcast i8* %".6" to {i64, i8*, double, i1, i64, i64}*
  %"TYPE_BOOLEAN" = load i64, i64* @"TYPE_BOOLEAN"
  %".8" = getelementptr {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %".7", i32 0, i32 0
  store i64 %"TYPE_BOOLEAN", i64* %".8"
  %".10" = getelementptr inbounds [1 x i8], [1 x i8]* @"str_117", i32 0, i32 0
  %".11" = getelementptr {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %".7", i32 0, i32 1
  store i8* %".10", i8** %".11"
  %".13" = getelementptr {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %".7", i32 0, i32 2
  store double              0x0, double* %".13"
  %"b.2" = load i1, i1* %"b.1"
  %".15" = getelementptr {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %".7", i32 0, i32 3
  store i1 %"b.2", i1* %".15"
  %"sub" = sub i64 0, 1
  %".17" = getelementptr {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %".7", i32 0, i32 4
  store i64 %"sub", i64* %".17"
  %"sub.1" = sub i64 0, 1
  %".19" = getelementptr {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %".7", i32 0, i32 5
  store i64 %"sub.1", i64* %".19"
  ret {i64, i8*, double, i1, i64, i64}* %".7"
}

define {i64, i8*, double, i1, i64, i64}* @"make_object"(i64 %"obj_index")
{
entry:
  %"obj_index.1" = alloca i64
  store i64 %"obj_index", i64* %"obj_index.1"
  %".4" = getelementptr {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* null, i32 1
  %".5" = ptrtoint {i64, i8*, double, i1, i64, i64}* %".4" to i64
  %".6" = call ccc i8* @"malloc"(i64 %".5")
  %".7" = bitcast i8* %".6" to {i64, i8*, double, i1, i64, i64}*
  %"TYPE_OBJECT" = load i64, i64* @"TYPE_OBJECT"
  %".8" = getelementptr {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %".7", i32 0, i32 0
  store i64 %"TYPE_OBJECT", i64* %".8"
  %".10" = getelementptr inbounds [1 x i8], [1 x i8]* @"str_118", i32 0, i32 0
  %".11" = getelementptr {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %".7", i32 0, i32 1
  store i8* %".10", i8** %".11"
  %".13" = getelementptr {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %".7", i32 0, i32 2
  store double              0x0, double* %".13"
  %".15" = getelementptr {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %".7", i32 0, i32 3
  store i1 false, i1* %".15"
  %"obj_index.2" = load i64, i64* %"obj_index.1"
  %".17" = getelementptr {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %".7", i32 0, i32 4
  store i64 %"obj_index.2", i64* %".17"
  %"sub" = sub i64 0, 1
  %".19" = getelementptr {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %".7", i32 0, i32 5
  store i64 %"sub", i64* %".19"
  ret {i64, i8*, double, i1, i64, i64}* %".7"
}

define {i64, i8*, double, i1, i64, i64}* @"make_array"(i64 %"arr_index")
{
entry:
  %"arr_index.1" = alloca i64
  store i64 %"arr_index", i64* %"arr_index.1"
  %".4" = getelementptr {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* null, i32 1
  %".5" = ptrtoint {i64, i8*, double, i1, i64, i64}* %".4" to i64
  %".6" = call ccc i8* @"malloc"(i64 %".5")
  %".7" = bitcast i8* %".6" to {i64, i8*, double, i1, i64, i64}*
  %"TYPE_ARRAY" = load i64, i64* @"TYPE_ARRAY"
  %".8" = getelementptr {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %".7", i32 0, i32 0
  store i64 %"TYPE_ARRAY", i64* %".8"
  %".10" = getelementptr inbounds [1 x i8], [1 x i8]* @"str_119", i32 0, i32 0
  %".11" = getelementptr {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %".7", i32 0, i32 1
  store i8* %".10", i8** %".11"
  %".13" = getelementptr {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %".7", i32 0, i32 2
  store double              0x0, double* %".13"
  %".15" = getelementptr {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %".7", i32 0, i32 3
  store i1 false, i1* %".15"
  %"sub" = sub i64 0, 1
  %".17" = getelementptr {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %".7", i32 0, i32 4
  store i64 %"sub", i64* %".17"
  %"arr_index.2" = load i64, i64* %"arr_index.1"
  %".19" = getelementptr {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %".7", i32 0, i32 5
  store i64 %"arr_index.2", i64* %".19"
  ret {i64, i8*, double, i1, i64, i64}* %".7"
}

define void @"put_main"(i8* %"key", {i64, i8*, double, i1, i64, i64}* %"value")
{
entry:
  %"key.1" = alloca i8*
  store i8* %"key", i8** %"key.1"
  %"value.1" = alloca {i64, i8*, double, i1, i64, i64}*
  store {i64, i8*, double, i1, i64, i64}* %"value", {i64, i8*, double, i1, i64, i64}** %"value.1"
  %".6" = load {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}*, {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}** @"main_hashmap"
  %".7" = getelementptr {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}, {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}* %".6", i32 0, i32 4
  %".8" = load i64, i64* %".7"
  %"count" = alloca i64
  store i64 %".8", i64* %"count"
  %"count.1" = load i64, i64* %"count"
  %"eq" = icmp eq i64 %"count.1", 0
  br i1 %"eq", label %"then", label %"endif"
then:
  %".11" = getelementptr {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}, {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}* null, i32 1
  %".12" = ptrtoint {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}* %".11" to i64
  %".13" = call ccc i8* @"malloc"(i64 %".12")
  %".14" = bitcast i8* %".13" to {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}*
  %".15" = getelementptr {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}* null, i32 1
  %".16" = ptrtoint {i8*, {i64, i8*, double, i1, i64, i64}}* %".15" to i64
  %".17" = call ccc i8* @"malloc"(i64 %".16")
  %".18" = bitcast i8* %".17" to {i8*, {i64, i8*, double, i1, i64, i64}}*
  %"key.2" = load i8*, i8** %"key.1"
  %".19" = getelementptr {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}* %".18", i32 0, i32 0
  store i8* %"key.2", i8** %".19"
  %"value.2" = load {i64, i8*, double, i1, i64, i64}*, {i64, i8*, double, i1, i64, i64}** %"value.1"
  %".21" = getelementptr {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}* %".18", i32 0, i32 1
  %".22" = load {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %"value.2"
  store {i64, i8*, double, i1, i64, i64} %".22", {i64, i8*, double, i1, i64, i64}* %".21"
  %".24" = getelementptr {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}, {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}* %".14", i32 0, i32 0
  %".25" = load {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}* %".18"
  store {i8*, {i64, i8*, double, i1, i64, i64}} %".25", {i8*, {i64, i8*, double, i1, i64, i64}}* %".24"
  %".27" = load {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}*, {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}** @"main_hashmap"
  %".28" = getelementptr {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}, {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}* %".27", i32 0, i32 1
  %".29" = load {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}* %".28"
  %".30" = alloca {i8*, {i64, i8*, double, i1, i64, i64}}
  store {i8*, {i64, i8*, double, i1, i64, i64}} %".29", {i8*, {i64, i8*, double, i1, i64, i64}}* %".30"
  %".32" = getelementptr {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}, {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}* %".14", i32 0, i32 1
  %".33" = load {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}* %".30"
  store {i8*, {i64, i8*, double, i1, i64, i64}} %".33", {i8*, {i64, i8*, double, i1, i64, i64}}* %".32"
  %".35" = load {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}*, {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}** @"main_hashmap"
  %".36" = getelementptr {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}, {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}* %".35", i32 0, i32 2
  %".37" = load {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}* %".36"
  %".38" = alloca {i8*, {i64, i8*, double, i1, i64, i64}}
  store {i8*, {i64, i8*, double, i1, i64, i64}} %".37", {i8*, {i64, i8*, double, i1, i64, i64}}* %".38"
  %".40" = getelementptr {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}, {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}* %".14", i32 0, i32 2
  %".41" = load {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}* %".38"
  store {i8*, {i64, i8*, double, i1, i64, i64}} %".41", {i8*, {i64, i8*, double, i1, i64, i64}}* %".40"
  %".43" = load {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}*, {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}** @"main_hashmap"
  %".44" = getelementptr {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}, {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}* %".43", i32 0, i32 3
  %".45" = load {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}* %".44"
  %".46" = alloca {i8*, {i64, i8*, double, i1, i64, i64}}
  store {i8*, {i64, i8*, double, i1, i64, i64}} %".45", {i8*, {i64, i8*, double, i1, i64, i64}}* %".46"
  %".48" = getelementptr {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}, {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}* %".14", i32 0, i32 3
  %".49" = load {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}* %".46"
  store {i8*, {i64, i8*, double, i1, i64, i64}} %".49", {i8*, {i64, i8*, double, i1, i64, i64}}* %".48"
  %".51" = getelementptr {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}, {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}* %".14", i32 0, i32 4
  store i64 1, i64* %".51"
  store {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}* %".14", {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}** @"main_hashmap"
  br label %"endif"
endif:
  %"count.2" = load i64, i64* %"count"
  %"eq.1" = icmp eq i64 %"count.2", 1
  br i1 %"eq.1", label %"then.1", label %"endif.1"
then.1:
  %".56" = getelementptr {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}, {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}* null, i32 1
  %".57" = ptrtoint {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}* %".56" to i64
  %".58" = call ccc i8* @"malloc"(i64 %".57")
  %".59" = bitcast i8* %".58" to {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}*
  %".60" = load {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}*, {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}** @"main_hashmap"
  %".61" = getelementptr {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}, {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}* %".60", i32 0, i32 0
  %".62" = load {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}* %".61"
  %".63" = alloca {i8*, {i64, i8*, double, i1, i64, i64}}
  store {i8*, {i64, i8*, double, i1, i64, i64}} %".62", {i8*, {i64, i8*, double, i1, i64, i64}}* %".63"
  %".65" = getelementptr {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}, {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}* %".59", i32 0, i32 0
  %".66" = load {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}* %".63"
  store {i8*, {i64, i8*, double, i1, i64, i64}} %".66", {i8*, {i64, i8*, double, i1, i64, i64}}* %".65"
  %".68" = getelementptr {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}* null, i32 1
  %".69" = ptrtoint {i8*, {i64, i8*, double, i1, i64, i64}}* %".68" to i64
  %".70" = call ccc i8* @"malloc"(i64 %".69")
  %".71" = bitcast i8* %".70" to {i8*, {i64, i8*, double, i1, i64, i64}}*
  %"key.3" = load i8*, i8** %"key.1"
  %".72" = getelementptr {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}* %".71", i32 0, i32 0
  store i8* %"key.3", i8** %".72"
  %"value.3" = load {i64, i8*, double, i1, i64, i64}*, {i64, i8*, double, i1, i64, i64}** %"value.1"
  %".74" = getelementptr {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}* %".71", i32 0, i32 1
  %".75" = load {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %"value.3"
  store {i64, i8*, double, i1, i64, i64} %".75", {i64, i8*, double, i1, i64, i64}* %".74"
  %".77" = getelementptr {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}, {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}* %".59", i32 0, i32 1
  %".78" = load {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}* %".71"
  store {i8*, {i64, i8*, double, i1, i64, i64}} %".78", {i8*, {i64, i8*, double, i1, i64, i64}}* %".77"
  %".80" = load {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}*, {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}** @"main_hashmap"
  %".81" = getelementptr {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}, {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}* %".80", i32 0, i32 2
  %".82" = load {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}* %".81"
  %".83" = alloca {i8*, {i64, i8*, double, i1, i64, i64}}
  store {i8*, {i64, i8*, double, i1, i64, i64}} %".82", {i8*, {i64, i8*, double, i1, i64, i64}}* %".83"
  %".85" = getelementptr {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}, {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}* %".59", i32 0, i32 2
  %".86" = load {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}* %".83"
  store {i8*, {i64, i8*, double, i1, i64, i64}} %".86", {i8*, {i64, i8*, double, i1, i64, i64}}* %".85"
  %".88" = load {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}*, {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}** @"main_hashmap"
  %".89" = getelementptr {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}, {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}* %".88", i32 0, i32 3
  %".90" = load {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}* %".89"
  %".91" = alloca {i8*, {i64, i8*, double, i1, i64, i64}}
  store {i8*, {i64, i8*, double, i1, i64, i64}} %".90", {i8*, {i64, i8*, double, i1, i64, i64}}* %".91"
  %".93" = getelementptr {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}, {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}* %".59", i32 0, i32 3
  %".94" = load {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}* %".91"
  store {i8*, {i64, i8*, double, i1, i64, i64}} %".94", {i8*, {i64, i8*, double, i1, i64, i64}}* %".93"
  %".96" = getelementptr {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}, {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}* %".59", i32 0, i32 4
  store i64 2, i64* %".96"
  store {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}* %".59", {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}** @"main_hashmap"
  br label %"endif.1"
endif.1:
  %"count.3" = load i64, i64* %"count"
  %"eq.2" = icmp eq i64 %"count.3", 2
  br i1 %"eq.2", label %"then.2", label %"endif.2"
then.2:
  %".101" = getelementptr {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}, {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}* null, i32 1
  %".102" = ptrtoint {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}* %".101" to i64
  %".103" = call ccc i8* @"malloc"(i64 %".102")
  %".104" = bitcast i8* %".103" to {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}*
  %".105" = load {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}*, {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}** @"main_hashmap"
  %".106" = getelementptr {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}, {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}* %".105", i32 0, i32 0
  %".107" = load {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}* %".106"
  %".108" = alloca {i8*, {i64, i8*, double, i1, i64, i64}}
  store {i8*, {i64, i8*, double, i1, i64, i64}} %".107", {i8*, {i64, i8*, double, i1, i64, i64}}* %".108"
  %".110" = getelementptr {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}, {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}* %".104", i32 0, i32 0
  %".111" = load {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}* %".108"
  store {i8*, {i64, i8*, double, i1, i64, i64}} %".111", {i8*, {i64, i8*, double, i1, i64, i64}}* %".110"
  %".113" = load {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}*, {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}** @"main_hashmap"
  %".114" = getelementptr {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}, {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}* %".113", i32 0, i32 1
  %".115" = load {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}* %".114"
  %".116" = alloca {i8*, {i64, i8*, double, i1, i64, i64}}
  store {i8*, {i64, i8*, double, i1, i64, i64}} %".115", {i8*, {i64, i8*, double, i1, i64, i64}}* %".116"
  %".118" = getelementptr {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}, {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}* %".104", i32 0, i32 1
  %".119" = load {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}* %".116"
  store {i8*, {i64, i8*, double, i1, i64, i64}} %".119", {i8*, {i64, i8*, double, i1, i64, i64}}* %".118"
  %".121" = getelementptr {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}* null, i32 1
  %".122" = ptrtoint {i8*, {i64, i8*, double, i1, i64, i64}}* %".121" to i64
  %".123" = call ccc i8* @"malloc"(i64 %".122")
  %".124" = bitcast i8* %".123" to {i8*, {i64, i8*, double, i1, i64, i64}}*
  %"key.4" = load i8*, i8** %"key.1"
  %".125" = getelementptr {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}* %".124", i32 0, i32 0
  store i8* %"key.4", i8** %".125"
  %"value.4" = load {i64, i8*, double, i1, i64, i64}*, {i64, i8*, double, i1, i64, i64}** %"value.1"
  %".127" = getelementptr {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}* %".124", i32 0, i32 1
  %".128" = load {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %"value.4"
  store {i64, i8*, double, i1, i64, i64} %".128", {i64, i8*, double, i1, i64, i64}* %".127"
  %".130" = getelementptr {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}, {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}* %".104", i32 0, i32 2
  %".131" = load {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}* %".124"
  store {i8*, {i64, i8*, double, i1, i64, i64}} %".131", {i8*, {i64, i8*, double, i1, i64, i64}}* %".130"
  %".133" = load {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}*, {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}** @"main_hashmap"
  %".134" = getelementptr {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}, {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}* %".133", i32 0, i32 3
  %".135" = load {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}* %".134"
  %".136" = alloca {i8*, {i64, i8*, double, i1, i64, i64}}
  store {i8*, {i64, i8*, double, i1, i64, i64}} %".135", {i8*, {i64, i8*, double, i1, i64, i64}}* %".136"
  %".138" = getelementptr {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}, {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}* %".104", i32 0, i32 3
  %".139" = load {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}* %".136"
  store {i8*, {i64, i8*, double, i1, i64, i64}} %".139", {i8*, {i64, i8*, double, i1, i64, i64}}* %".138"
  %".141" = getelementptr {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}, {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}* %".104", i32 0, i32 4
  store i64 3, i64* %".141"
  store {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}* %".104", {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}** @"main_hashmap"
  br label %"endif.2"
endif.2:
  %"count.4" = load i64, i64* %"count"
  %"eq.3" = icmp eq i64 %"count.4", 3
  br i1 %"eq.3", label %"then.3", label %"endif.3"
then.3:
  %".146" = getelementptr {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}, {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}* null, i32 1
  %".147" = ptrtoint {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}* %".146" to i64
  %".148" = call ccc i8* @"malloc"(i64 %".147")
  %".149" = bitcast i8* %".148" to {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}*
  %".150" = load {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}*, {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}** @"main_hashmap"
  %".151" = getelementptr {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}, {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}* %".150", i32 0, i32 0
  %".152" = load {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}* %".151"
  %".153" = alloca {i8*, {i64, i8*, double, i1, i64, i64}}
  store {i8*, {i64, i8*, double, i1, i64, i64}} %".152", {i8*, {i64, i8*, double, i1, i64, i64}}* %".153"
  %".155" = getelementptr {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}, {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}* %".149", i32 0, i32 0
  %".156" = load {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}* %".153"
  store {i8*, {i64, i8*, double, i1, i64, i64}} %".156", {i8*, {i64, i8*, double, i1, i64, i64}}* %".155"
  %".158" = load {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}*, {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}** @"main_hashmap"
  %".159" = getelementptr {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}, {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}* %".158", i32 0, i32 1
  %".160" = load {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}* %".159"
  %".161" = alloca {i8*, {i64, i8*, double, i1, i64, i64}}
  store {i8*, {i64, i8*, double, i1, i64, i64}} %".160", {i8*, {i64, i8*, double, i1, i64, i64}}* %".161"
  %".163" = getelementptr {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}, {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}* %".149", i32 0, i32 1
  %".164" = load {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}* %".161"
  store {i8*, {i64, i8*, double, i1, i64, i64}} %".164", {i8*, {i64, i8*, double, i1, i64, i64}}* %".163"
  %".166" = load {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}*, {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}** @"main_hashmap"
  %".167" = getelementptr {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}, {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}* %".166", i32 0, i32 2
  %".168" = load {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}* %".167"
  %".169" = alloca {i8*, {i64, i8*, double, i1, i64, i64}}
  store {i8*, {i64, i8*, double, i1, i64, i64}} %".168", {i8*, {i64, i8*, double, i1, i64, i64}}* %".169"
  %".171" = getelementptr {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}, {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}* %".149", i32 0, i32 2
  %".172" = load {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}* %".169"
  store {i8*, {i64, i8*, double, i1, i64, i64}} %".172", {i8*, {i64, i8*, double, i1, i64, i64}}* %".171"
  %".174" = getelementptr {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}* null, i32 1
  %".175" = ptrtoint {i8*, {i64, i8*, double, i1, i64, i64}}* %".174" to i64
  %".176" = call ccc i8* @"malloc"(i64 %".175")
  %".177" = bitcast i8* %".176" to {i8*, {i64, i8*, double, i1, i64, i64}}*
  %"key.5" = load i8*, i8** %"key.1"
  %".178" = getelementptr {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}* %".177", i32 0, i32 0
  store i8* %"key.5", i8** %".178"
  %"value.5" = load {i64, i8*, double, i1, i64, i64}*, {i64, i8*, double, i1, i64, i64}** %"value.1"
  %".180" = getelementptr {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}* %".177", i32 0, i32 1
  %".181" = load {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %"value.5"
  store {i64, i8*, double, i1, i64, i64} %".181", {i64, i8*, double, i1, i64, i64}* %".180"
  %".183" = getelementptr {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}, {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}* %".149", i32 0, i32 3
  %".184" = load {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}* %".177"
  store {i8*, {i64, i8*, double, i1, i64, i64}} %".184", {i8*, {i64, i8*, double, i1, i64, i64}}* %".183"
  %".186" = getelementptr {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}, {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}* %".149", i32 0, i32 4
  store i64 4, i64* %".186"
  store {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}* %".149", {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}** @"main_hashmap"
  br label %"endif.3"
endif.3:
  ret void
}

define void @"put_user"(i8* %"key", {i64, i8*, double, i1, i64, i64}* %"value")
{
entry:
  %"key.1" = alloca i8*
  store i8* %"key", i8** %"key.1"
  %"value.1" = alloca {i64, i8*, double, i1, i64, i64}*
  store {i64, i8*, double, i1, i64, i64}* %"value", {i64, i8*, double, i1, i64, i64}** %"value.1"
  %".6" = load {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}*, {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}** @"user_hashmap"
  %".7" = getelementptr {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}, {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}* %".6", i32 0, i32 4
  %".8" = load i64, i64* %".7"
  %"count" = alloca i64
  store i64 %".8", i64* %"count"
  %"count.1" = load i64, i64* %"count"
  %"eq" = icmp eq i64 %"count.1", 0
  br i1 %"eq", label %"then", label %"endif"
then:
  %".11" = getelementptr {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}, {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}* null, i32 1
  %".12" = ptrtoint {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}* %".11" to i64
  %".13" = call ccc i8* @"malloc"(i64 %".12")
  %".14" = bitcast i8* %".13" to {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}*
  %".15" = getelementptr {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}* null, i32 1
  %".16" = ptrtoint {i8*, {i64, i8*, double, i1, i64, i64}}* %".15" to i64
  %".17" = call ccc i8* @"malloc"(i64 %".16")
  %".18" = bitcast i8* %".17" to {i8*, {i64, i8*, double, i1, i64, i64}}*
  %"key.2" = load i8*, i8** %"key.1"
  %".19" = getelementptr {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}* %".18", i32 0, i32 0
  store i8* %"key.2", i8** %".19"
  %"value.2" = load {i64, i8*, double, i1, i64, i64}*, {i64, i8*, double, i1, i64, i64}** %"value.1"
  %".21" = getelementptr {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}* %".18", i32 0, i32 1
  %".22" = load {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %"value.2"
  store {i64, i8*, double, i1, i64, i64} %".22", {i64, i8*, double, i1, i64, i64}* %".21"
  %".24" = getelementptr {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}, {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}* %".14", i32 0, i32 0
  %".25" = load {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}* %".18"
  store {i8*, {i64, i8*, double, i1, i64, i64}} %".25", {i8*, {i64, i8*, double, i1, i64, i64}}* %".24"
  %".27" = load {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}*, {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}** @"user_hashmap"
  %".28" = getelementptr {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}, {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}* %".27", i32 0, i32 1
  %".29" = load {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}* %".28"
  %".30" = alloca {i8*, {i64, i8*, double, i1, i64, i64}}
  store {i8*, {i64, i8*, double, i1, i64, i64}} %".29", {i8*, {i64, i8*, double, i1, i64, i64}}* %".30"
  %".32" = getelementptr {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}, {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}* %".14", i32 0, i32 1
  %".33" = load {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}* %".30"
  store {i8*, {i64, i8*, double, i1, i64, i64}} %".33", {i8*, {i64, i8*, double, i1, i64, i64}}* %".32"
  %".35" = load {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}*, {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}** @"user_hashmap"
  %".36" = getelementptr {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}, {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}* %".35", i32 0, i32 2
  %".37" = load {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}* %".36"
  %".38" = alloca {i8*, {i64, i8*, double, i1, i64, i64}}
  store {i8*, {i64, i8*, double, i1, i64, i64}} %".37", {i8*, {i64, i8*, double, i1, i64, i64}}* %".38"
  %".40" = getelementptr {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}, {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}* %".14", i32 0, i32 2
  %".41" = load {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}* %".38"
  store {i8*, {i64, i8*, double, i1, i64, i64}} %".41", {i8*, {i64, i8*, double, i1, i64, i64}}* %".40"
  %".43" = load {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}*, {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}** @"user_hashmap"
  %".44" = getelementptr {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}, {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}* %".43", i32 0, i32 3
  %".45" = load {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}* %".44"
  %".46" = alloca {i8*, {i64, i8*, double, i1, i64, i64}}
  store {i8*, {i64, i8*, double, i1, i64, i64}} %".45", {i8*, {i64, i8*, double, i1, i64, i64}}* %".46"
  %".48" = getelementptr {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}, {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}* %".14", i32 0, i32 3
  %".49" = load {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}* %".46"
  store {i8*, {i64, i8*, double, i1, i64, i64}} %".49", {i8*, {i64, i8*, double, i1, i64, i64}}* %".48"
  %".51" = getelementptr {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}, {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}* %".14", i32 0, i32 4
  store i64 1, i64* %".51"
  store {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}* %".14", {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}** @"user_hashmap"
  br label %"endif"
endif:
  %"count.2" = load i64, i64* %"count"
  %"eq.1" = icmp eq i64 %"count.2", 1
  br i1 %"eq.1", label %"then.1", label %"endif.1"
then.1:
  %".56" = getelementptr {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}, {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}* null, i32 1
  %".57" = ptrtoint {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}* %".56" to i64
  %".58" = call ccc i8* @"malloc"(i64 %".57")
  %".59" = bitcast i8* %".58" to {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}*
  %".60" = load {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}*, {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}** @"user_hashmap"
  %".61" = getelementptr {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}, {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}* %".60", i32 0, i32 0
  %".62" = load {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}* %".61"
  %".63" = alloca {i8*, {i64, i8*, double, i1, i64, i64}}
  store {i8*, {i64, i8*, double, i1, i64, i64}} %".62", {i8*, {i64, i8*, double, i1, i64, i64}}* %".63"
  %".65" = getelementptr {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}, {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}* %".59", i32 0, i32 0
  %".66" = load {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}* %".63"
  store {i8*, {i64, i8*, double, i1, i64, i64}} %".66", {i8*, {i64, i8*, double, i1, i64, i64}}* %".65"
  %".68" = getelementptr {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}* null, i32 1
  %".69" = ptrtoint {i8*, {i64, i8*, double, i1, i64, i64}}* %".68" to i64
  %".70" = call ccc i8* @"malloc"(i64 %".69")
  %".71" = bitcast i8* %".70" to {i8*, {i64, i8*, double, i1, i64, i64}}*
  %"key.3" = load i8*, i8** %"key.1"
  %".72" = getelementptr {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}* %".71", i32 0, i32 0
  store i8* %"key.3", i8** %".72"
  %"value.3" = load {i64, i8*, double, i1, i64, i64}*, {i64, i8*, double, i1, i64, i64}** %"value.1"
  %".74" = getelementptr {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}* %".71", i32 0, i32 1
  %".75" = load {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %"value.3"
  store {i64, i8*, double, i1, i64, i64} %".75", {i64, i8*, double, i1, i64, i64}* %".74"
  %".77" = getelementptr {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}, {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}* %".59", i32 0, i32 1
  %".78" = load {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}* %".71"
  store {i8*, {i64, i8*, double, i1, i64, i64}} %".78", {i8*, {i64, i8*, double, i1, i64, i64}}* %".77"
  %".80" = load {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}*, {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}** @"user_hashmap"
  %".81" = getelementptr {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}, {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}* %".80", i32 0, i32 2
  %".82" = load {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}* %".81"
  %".83" = alloca {i8*, {i64, i8*, double, i1, i64, i64}}
  store {i8*, {i64, i8*, double, i1, i64, i64}} %".82", {i8*, {i64, i8*, double, i1, i64, i64}}* %".83"
  %".85" = getelementptr {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}, {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}* %".59", i32 0, i32 2
  %".86" = load {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}* %".83"
  store {i8*, {i64, i8*, double, i1, i64, i64}} %".86", {i8*, {i64, i8*, double, i1, i64, i64}}* %".85"
  %".88" = load {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}*, {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}** @"user_hashmap"
  %".89" = getelementptr {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}, {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}* %".88", i32 0, i32 3
  %".90" = load {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}* %".89"
  %".91" = alloca {i8*, {i64, i8*, double, i1, i64, i64}}
  store {i8*, {i64, i8*, double, i1, i64, i64}} %".90", {i8*, {i64, i8*, double, i1, i64, i64}}* %".91"
  %".93" = getelementptr {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}, {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}* %".59", i32 0, i32 3
  %".94" = load {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}* %".91"
  store {i8*, {i64, i8*, double, i1, i64, i64}} %".94", {i8*, {i64, i8*, double, i1, i64, i64}}* %".93"
  %".96" = getelementptr {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}, {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}* %".59", i32 0, i32 4
  store i64 2, i64* %".96"
  store {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}* %".59", {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}** @"user_hashmap"
  br label %"endif.1"
endif.1:
  %"count.3" = load i64, i64* %"count"
  %"eq.2" = icmp eq i64 %"count.3", 2
  br i1 %"eq.2", label %"then.2", label %"endif.2"
then.2:
  %".101" = getelementptr {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}, {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}* null, i32 1
  %".102" = ptrtoint {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}* %".101" to i64
  %".103" = call ccc i8* @"malloc"(i64 %".102")
  %".104" = bitcast i8* %".103" to {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}*
  %".105" = load {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}*, {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}** @"user_hashmap"
  %".106" = getelementptr {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}, {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}* %".105", i32 0, i32 0
  %".107" = load {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}* %".106"
  %".108" = alloca {i8*, {i64, i8*, double, i1, i64, i64}}
  store {i8*, {i64, i8*, double, i1, i64, i64}} %".107", {i8*, {i64, i8*, double, i1, i64, i64}}* %".108"
  %".110" = getelementptr {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}, {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}* %".104", i32 0, i32 0
  %".111" = load {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}* %".108"
  store {i8*, {i64, i8*, double, i1, i64, i64}} %".111", {i8*, {i64, i8*, double, i1, i64, i64}}* %".110"
  %".113" = load {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}*, {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}** @"user_hashmap"
  %".114" = getelementptr {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}, {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}* %".113", i32 0, i32 1
  %".115" = load {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}* %".114"
  %".116" = alloca {i8*, {i64, i8*, double, i1, i64, i64}}
  store {i8*, {i64, i8*, double, i1, i64, i64}} %".115", {i8*, {i64, i8*, double, i1, i64, i64}}* %".116"
  %".118" = getelementptr {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}, {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}* %".104", i32 0, i32 1
  %".119" = load {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}* %".116"
  store {i8*, {i64, i8*, double, i1, i64, i64}} %".119", {i8*, {i64, i8*, double, i1, i64, i64}}* %".118"
  %".121" = getelementptr {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}* null, i32 1
  %".122" = ptrtoint {i8*, {i64, i8*, double, i1, i64, i64}}* %".121" to i64
  %".123" = call ccc i8* @"malloc"(i64 %".122")
  %".124" = bitcast i8* %".123" to {i8*, {i64, i8*, double, i1, i64, i64}}*
  %"key.4" = load i8*, i8** %"key.1"
  %".125" = getelementptr {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}* %".124", i32 0, i32 0
  store i8* %"key.4", i8** %".125"
  %"value.4" = load {i64, i8*, double, i1, i64, i64}*, {i64, i8*, double, i1, i64, i64}** %"value.1"
  %".127" = getelementptr {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}* %".124", i32 0, i32 1
  %".128" = load {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %"value.4"
  store {i64, i8*, double, i1, i64, i64} %".128", {i64, i8*, double, i1, i64, i64}* %".127"
  %".130" = getelementptr {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}, {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}* %".104", i32 0, i32 2
  %".131" = load {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}* %".124"
  store {i8*, {i64, i8*, double, i1, i64, i64}} %".131", {i8*, {i64, i8*, double, i1, i64, i64}}* %".130"
  %".133" = load {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}*, {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}** @"user_hashmap"
  %".134" = getelementptr {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}, {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}* %".133", i32 0, i32 3
  %".135" = load {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}* %".134"
  %".136" = alloca {i8*, {i64, i8*, double, i1, i64, i64}}
  store {i8*, {i64, i8*, double, i1, i64, i64}} %".135", {i8*, {i64, i8*, double, i1, i64, i64}}* %".136"
  %".138" = getelementptr {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}, {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}* %".104", i32 0, i32 3
  %".139" = load {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}* %".136"
  store {i8*, {i64, i8*, double, i1, i64, i64}} %".139", {i8*, {i64, i8*, double, i1, i64, i64}}* %".138"
  %".141" = getelementptr {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}, {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}* %".104", i32 0, i32 4
  store i64 3, i64* %".141"
  store {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}* %".104", {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}** @"user_hashmap"
  br label %"endif.2"
endif.2:
  %"count.4" = load i64, i64* %"count"
  %"eq.3" = icmp eq i64 %"count.4", 3
  br i1 %"eq.3", label %"then.3", label %"endif.3"
then.3:
  %".146" = getelementptr {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}, {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}* null, i32 1
  %".147" = ptrtoint {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}* %".146" to i64
  %".148" = call ccc i8* @"malloc"(i64 %".147")
  %".149" = bitcast i8* %".148" to {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}*
  %".150" = load {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}*, {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}** @"user_hashmap"
  %".151" = getelementptr {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}, {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}* %".150", i32 0, i32 0
  %".152" = load {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}* %".151"
  %".153" = alloca {i8*, {i64, i8*, double, i1, i64, i64}}
  store {i8*, {i64, i8*, double, i1, i64, i64}} %".152", {i8*, {i64, i8*, double, i1, i64, i64}}* %".153"
  %".155" = getelementptr {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}, {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}* %".149", i32 0, i32 0
  %".156" = load {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}* %".153"
  store {i8*, {i64, i8*, double, i1, i64, i64}} %".156", {i8*, {i64, i8*, double, i1, i64, i64}}* %".155"
  %".158" = load {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}*, {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}** @"user_hashmap"
  %".159" = getelementptr {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}, {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}* %".158", i32 0, i32 1
  %".160" = load {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}* %".159"
  %".161" = alloca {i8*, {i64, i8*, double, i1, i64, i64}}
  store {i8*, {i64, i8*, double, i1, i64, i64}} %".160", {i8*, {i64, i8*, double, i1, i64, i64}}* %".161"
  %".163" = getelementptr {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}, {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}* %".149", i32 0, i32 1
  %".164" = load {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}* %".161"
  store {i8*, {i64, i8*, double, i1, i64, i64}} %".164", {i8*, {i64, i8*, double, i1, i64, i64}}* %".163"
  %".166" = load {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}*, {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}** @"user_hashmap"
  %".167" = getelementptr {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}, {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}* %".166", i32 0, i32 2
  %".168" = load {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}* %".167"
  %".169" = alloca {i8*, {i64, i8*, double, i1, i64, i64}}
  store {i8*, {i64, i8*, double, i1, i64, i64}} %".168", {i8*, {i64, i8*, double, i1, i64, i64}}* %".169"
  %".171" = getelementptr {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}, {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}* %".149", i32 0, i32 2
  %".172" = load {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}* %".169"
  store {i8*, {i64, i8*, double, i1, i64, i64}} %".172", {i8*, {i64, i8*, double, i1, i64, i64}}* %".171"
  %".174" = getelementptr {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}* null, i32 1
  %".175" = ptrtoint {i8*, {i64, i8*, double, i1, i64, i64}}* %".174" to i64
  %".176" = call ccc i8* @"malloc"(i64 %".175")
  %".177" = bitcast i8* %".176" to {i8*, {i64, i8*, double, i1, i64, i64}}*
  %"key.5" = load i8*, i8** %"key.1"
  %".178" = getelementptr {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}* %".177", i32 0, i32 0
  store i8* %"key.5", i8** %".178"
  %"value.5" = load {i64, i8*, double, i1, i64, i64}*, {i64, i8*, double, i1, i64, i64}** %"value.1"
  %".180" = getelementptr {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}* %".177", i32 0, i32 1
  %".181" = load {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %"value.5"
  store {i64, i8*, double, i1, i64, i64} %".181", {i64, i8*, double, i1, i64, i64}* %".180"
  %".183" = getelementptr {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}, {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}* %".149", i32 0, i32 3
  %".184" = load {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}* %".177"
  store {i8*, {i64, i8*, double, i1, i64, i64}} %".184", {i8*, {i64, i8*, double, i1, i64, i64}}* %".183"
  %".186" = getelementptr {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}, {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}* %".149", i32 0, i32 4
  store i64 4, i64* %".186"
  store {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}* %".149", {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}** @"user_hashmap"
  br label %"endif.3"
endif.3:
  ret void
}

define void @"push_item"({i64, i8*, double, i1, i64, i64}* %"value")
{
entry:
  %"value.1" = alloca {i64, i8*, double, i1, i64, i64}*
  store {i64, i8*, double, i1, i64, i64}* %"value", {i64, i8*, double, i1, i64, i64}** %"value.1"
  %".4" = load {{i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, i64}*, {{i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, i64}** @"items_array"
  %".5" = getelementptr {{i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, i64}, {{i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, i64}* %".4", i32 0, i32 4
  %".6" = load i64, i64* %".5"
  %"count" = alloca i64
  store i64 %".6", i64* %"count"
  %"count.1" = load i64, i64* %"count"
  %"eq" = icmp eq i64 %"count.1", 0
  br i1 %"eq", label %"then", label %"endif"
then:
  %".9" = getelementptr {{i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, i64}, {{i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, i64}* null, i32 1
  %".10" = ptrtoint {{i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, i64}* %".9" to i64
  %".11" = call ccc i8* @"malloc"(i64 %".10")
  %".12" = bitcast i8* %".11" to {{i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, i64}*
  %"value.2" = load {i64, i8*, double, i1, i64, i64}*, {i64, i8*, double, i1, i64, i64}** %"value.1"
  %".13" = getelementptr {{i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, i64}, {{i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, i64}* %".12", i32 0, i32 0
  %".14" = load {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %"value.2"
  store {i64, i8*, double, i1, i64, i64} %".14", {i64, i8*, double, i1, i64, i64}* %".13"
  %".16" = load {{i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, i64}*, {{i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, i64}** @"items_array"
  %".17" = getelementptr {{i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, i64}, {{i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, i64}* %".16", i32 0, i32 1
  %".18" = load {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %".17"
  %".19" = alloca {i64, i8*, double, i1, i64, i64}
  store {i64, i8*, double, i1, i64, i64} %".18", {i64, i8*, double, i1, i64, i64}* %".19"
  %".21" = getelementptr {{i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, i64}, {{i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, i64}* %".12", i32 0, i32 1
  %".22" = load {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %".19"
  store {i64, i8*, double, i1, i64, i64} %".22", {i64, i8*, double, i1, i64, i64}* %".21"
  %".24" = load {{i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, i64}*, {{i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, i64}** @"items_array"
  %".25" = getelementptr {{i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, i64}, {{i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, i64}* %".24", i32 0, i32 2
  %".26" = load {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %".25"
  %".27" = alloca {i64, i8*, double, i1, i64, i64}
  store {i64, i8*, double, i1, i64, i64} %".26", {i64, i8*, double, i1, i64, i64}* %".27"
  %".29" = getelementptr {{i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, i64}, {{i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, i64}* %".12", i32 0, i32 2
  %".30" = load {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %".27"
  store {i64, i8*, double, i1, i64, i64} %".30", {i64, i8*, double, i1, i64, i64}* %".29"
  %".32" = load {{i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, i64}*, {{i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, i64}** @"items_array"
  %".33" = getelementptr {{i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, i64}, {{i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, i64}* %".32", i32 0, i32 3
  %".34" = load {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %".33"
  %".35" = alloca {i64, i8*, double, i1, i64, i64}
  store {i64, i8*, double, i1, i64, i64} %".34", {i64, i8*, double, i1, i64, i64}* %".35"
  %".37" = getelementptr {{i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, i64}, {{i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, i64}* %".12", i32 0, i32 3
  %".38" = load {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %".35"
  store {i64, i8*, double, i1, i64, i64} %".38", {i64, i8*, double, i1, i64, i64}* %".37"
  %".40" = getelementptr {{i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, i64}, {{i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, i64}* %".12", i32 0, i32 4
  store i64 1, i64* %".40"
  store {{i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, i64}* %".12", {{i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, i64}** @"items_array"
  br label %"endif"
endif:
  %"count.2" = load i64, i64* %"count"
  %"eq.1" = icmp eq i64 %"count.2", 1
  br i1 %"eq.1", label %"then.1", label %"endif.1"
then.1:
  %".45" = getelementptr {{i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, i64}, {{i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, i64}* null, i32 1
  %".46" = ptrtoint {{i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, i64}* %".45" to i64
  %".47" = call ccc i8* @"malloc"(i64 %".46")
  %".48" = bitcast i8* %".47" to {{i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, i64}*
  %".49" = load {{i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, i64}*, {{i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, i64}** @"items_array"
  %".50" = getelementptr {{i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, i64}, {{i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, i64}* %".49", i32 0, i32 0
  %".51" = load {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %".50"
  %".52" = alloca {i64, i8*, double, i1, i64, i64}
  store {i64, i8*, double, i1, i64, i64} %".51", {i64, i8*, double, i1, i64, i64}* %".52"
  %".54" = getelementptr {{i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, i64}, {{i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, i64}* %".48", i32 0, i32 0
  %".55" = load {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %".52"
  store {i64, i8*, double, i1, i64, i64} %".55", {i64, i8*, double, i1, i64, i64}* %".54"
  %"value.3" = load {i64, i8*, double, i1, i64, i64}*, {i64, i8*, double, i1, i64, i64}** %"value.1"
  %".57" = getelementptr {{i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, i64}, {{i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, i64}* %".48", i32 0, i32 1
  %".58" = load {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %"value.3"
  store {i64, i8*, double, i1, i64, i64} %".58", {i64, i8*, double, i1, i64, i64}* %".57"
  %".60" = load {{i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, i64}*, {{i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, i64}** @"items_array"
  %".61" = getelementptr {{i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, i64}, {{i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, i64}* %".60", i32 0, i32 2
  %".62" = load {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %".61"
  %".63" = alloca {i64, i8*, double, i1, i64, i64}
  store {i64, i8*, double, i1, i64, i64} %".62", {i64, i8*, double, i1, i64, i64}* %".63"
  %".65" = getelementptr {{i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, i64}, {{i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, i64}* %".48", i32 0, i32 2
  %".66" = load {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %".63"
  store {i64, i8*, double, i1, i64, i64} %".66", {i64, i8*, double, i1, i64, i64}* %".65"
  %".68" = load {{i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, i64}*, {{i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, i64}** @"items_array"
  %".69" = getelementptr {{i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, i64}, {{i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, i64}* %".68", i32 0, i32 3
  %".70" = load {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %".69"
  %".71" = alloca {i64, i8*, double, i1, i64, i64}
  store {i64, i8*, double, i1, i64, i64} %".70", {i64, i8*, double, i1, i64, i64}* %".71"
  %".73" = getelementptr {{i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, i64}, {{i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, i64}* %".48", i32 0, i32 3
  %".74" = load {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %".71"
  store {i64, i8*, double, i1, i64, i64} %".74", {i64, i8*, double, i1, i64, i64}* %".73"
  %".76" = getelementptr {{i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, i64}, {{i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, i64}* %".48", i32 0, i32 4
  store i64 2, i64* %".76"
  store {{i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, i64}* %".48", {{i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, i64}** @"items_array"
  br label %"endif.1"
endif.1:
  %"count.3" = load i64, i64* %"count"
  %"eq.2" = icmp eq i64 %"count.3", 2
  br i1 %"eq.2", label %"then.2", label %"endif.2"
then.2:
  %".81" = getelementptr {{i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, i64}, {{i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, i64}* null, i32 1
  %".82" = ptrtoint {{i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, i64}* %".81" to i64
  %".83" = call ccc i8* @"malloc"(i64 %".82")
  %".84" = bitcast i8* %".83" to {{i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, i64}*
  %".85" = load {{i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, i64}*, {{i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, i64}** @"items_array"
  %".86" = getelementptr {{i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, i64}, {{i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, i64}* %".85", i32 0, i32 0
  %".87" = load {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %".86"
  %".88" = alloca {i64, i8*, double, i1, i64, i64}
  store {i64, i8*, double, i1, i64, i64} %".87", {i64, i8*, double, i1, i64, i64}* %".88"
  %".90" = getelementptr {{i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, i64}, {{i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, i64}* %".84", i32 0, i32 0
  %".91" = load {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %".88"
  store {i64, i8*, double, i1, i64, i64} %".91", {i64, i8*, double, i1, i64, i64}* %".90"
  %".93" = load {{i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, i64}*, {{i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, i64}** @"items_array"
  %".94" = getelementptr {{i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, i64}, {{i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, i64}* %".93", i32 0, i32 1
  %".95" = load {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %".94"
  %".96" = alloca {i64, i8*, double, i1, i64, i64}
  store {i64, i8*, double, i1, i64, i64} %".95", {i64, i8*, double, i1, i64, i64}* %".96"
  %".98" = getelementptr {{i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, i64}, {{i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, i64}* %".84", i32 0, i32 1
  %".99" = load {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %".96"
  store {i64, i8*, double, i1, i64, i64} %".99", {i64, i8*, double, i1, i64, i64}* %".98"
  %"value.4" = load {i64, i8*, double, i1, i64, i64}*, {i64, i8*, double, i1, i64, i64}** %"value.1"
  %".101" = getelementptr {{i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, i64}, {{i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, i64}* %".84", i32 0, i32 2
  %".102" = load {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %"value.4"
  store {i64, i8*, double, i1, i64, i64} %".102", {i64, i8*, double, i1, i64, i64}* %".101"
  %".104" = load {{i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, i64}*, {{i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, i64}** @"items_array"
  %".105" = getelementptr {{i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, i64}, {{i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, i64}* %".104", i32 0, i32 3
  %".106" = load {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %".105"
  %".107" = alloca {i64, i8*, double, i1, i64, i64}
  store {i64, i8*, double, i1, i64, i64} %".106", {i64, i8*, double, i1, i64, i64}* %".107"
  %".109" = getelementptr {{i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, i64}, {{i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, i64}* %".84", i32 0, i32 3
  %".110" = load {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %".107"
  store {i64, i8*, double, i1, i64, i64} %".110", {i64, i8*, double, i1, i64, i64}* %".109"
  %".112" = getelementptr {{i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, i64}, {{i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, i64}* %".84", i32 0, i32 4
  store i64 3, i64* %".112"
  store {{i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, i64}* %".84", {{i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, i64}** @"items_array"
  br label %"endif.2"
endif.2:
  %"count.4" = load i64, i64* %"count"
  %"eq.3" = icmp eq i64 %"count.4", 3
  br i1 %"eq.3", label %"then.3", label %"endif.3"
then.3:
  %".117" = getelementptr {{i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, i64}, {{i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, i64}* null, i32 1
  %".118" = ptrtoint {{i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, i64}* %".117" to i64
  %".119" = call ccc i8* @"malloc"(i64 %".118")
  %".120" = bitcast i8* %".119" to {{i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, i64}*
  %".121" = load {{i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, i64}*, {{i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, i64}** @"items_array"
  %".122" = getelementptr {{i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, i64}, {{i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, i64}* %".121", i32 0, i32 0
  %".123" = load {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %".122"
  %".124" = alloca {i64, i8*, double, i1, i64, i64}
  store {i64, i8*, double, i1, i64, i64} %".123", {i64, i8*, double, i1, i64, i64}* %".124"
  %".126" = getelementptr {{i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, i64}, {{i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, i64}* %".120", i32 0, i32 0
  %".127" = load {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %".124"
  store {i64, i8*, double, i1, i64, i64} %".127", {i64, i8*, double, i1, i64, i64}* %".126"
  %".129" = load {{i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, i64}*, {{i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, i64}** @"items_array"
  %".130" = getelementptr {{i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, i64}, {{i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, i64}* %".129", i32 0, i32 1
  %".131" = load {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %".130"
  %".132" = alloca {i64, i8*, double, i1, i64, i64}
  store {i64, i8*, double, i1, i64, i64} %".131", {i64, i8*, double, i1, i64, i64}* %".132"
  %".134" = getelementptr {{i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, i64}, {{i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, i64}* %".120", i32 0, i32 1
  %".135" = load {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %".132"
  store {i64, i8*, double, i1, i64, i64} %".135", {i64, i8*, double, i1, i64, i64}* %".134"
  %".137" = load {{i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, i64}*, {{i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, i64}** @"items_array"
  %".138" = getelementptr {{i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, i64}, {{i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, i64}* %".137", i32 0, i32 2
  %".139" = load {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %".138"
  %".140" = alloca {i64, i8*, double, i1, i64, i64}
  store {i64, i8*, double, i1, i64, i64} %".139", {i64, i8*, double, i1, i64, i64}* %".140"
  %".142" = getelementptr {{i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, i64}, {{i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, i64}* %".120", i32 0, i32 2
  %".143" = load {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %".140"
  store {i64, i8*, double, i1, i64, i64} %".143", {i64, i8*, double, i1, i64, i64}* %".142"
  %"value.5" = load {i64, i8*, double, i1, i64, i64}*, {i64, i8*, double, i1, i64, i64}** %"value.1"
  %".145" = getelementptr {{i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, i64}, {{i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, i64}* %".120", i32 0, i32 3
  %".146" = load {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %"value.5"
  store {i64, i8*, double, i1, i64, i64} %".146", {i64, i8*, double, i1, i64, i64}* %".145"
  %".148" = getelementptr {{i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, i64}, {{i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, i64}* %".120", i32 0, i32 4
  store i64 4, i64* %".148"
  store {{i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, i64}* %".120", {{i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, i64}** @"items_array"
  br label %"endif.3"
endif.3:
  ret void
}

define {i64, i8*, double, i1, i64, i64}* @"get_main"(i8* %"key")
{
entry:
  %"key.1" = alloca i8*
  store i8* %"key", i8** %"key.1"
  %".4" = load {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}*, {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}** @"main_hashmap"
  %".5" = getelementptr {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}, {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}* %".4", i32 0, i32 4
  %".6" = load i64, i64* %".5"
  %"gt" = icmp sgt i64 %".6", 0
  %".7" = load {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}*, {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}** @"main_hashmap"
  %".8" = getelementptr {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}, {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}* %".7", i32 0, i32 0
  %".9" = getelementptr {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}* %".8", i32 0, i32 0
  %".10" = load i8*, i8** %".9"
  %"key.2" = load i8*, i8** %"key.1"
  %".11" = call i1 @"string_equals"(i8* %".10", i8* %"key.2")
  %"and" = and i1 %"gt", %".11"
  br i1 %"and", label %"then", label %"endif"
then:
  %".13" = load {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}*, {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}** @"main_hashmap"
  %".14" = getelementptr {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}, {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}* %".13", i32 0, i32 0
  %".15" = getelementptr {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}* %".14", i32 0, i32 1
  %".16" = load {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %".15"
  ret {i64, i8*, double, i1, i64, i64} %".16"
endif:
  %".18" = load {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}*, {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}** @"main_hashmap"
  %".19" = getelementptr {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}, {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}* %".18", i32 0, i32 4
  %".20" = load i64, i64* %".19"
  %"gt.1" = icmp sgt i64 %".20", 1
  %".21" = load {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}*, {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}** @"main_hashmap"
  %".22" = getelementptr {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}, {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}* %".21", i32 0, i32 1
  %".23" = getelementptr {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}* %".22", i32 0, i32 0
  %".24" = load i8*, i8** %".23"
  %"key.3" = load i8*, i8** %"key.1"
  %".25" = call i1 @"string_equals"(i8* %".24", i8* %"key.3")
  %"and.1" = and i1 %"gt.1", %".25"
  br i1 %"and.1", label %"then.1", label %"endif.1"
then.1:
  %".27" = load {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}*, {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}** @"main_hashmap"
  %".28" = getelementptr {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}, {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}* %".27", i32 0, i32 1
  %".29" = getelementptr {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}* %".28", i32 0, i32 1
  %".30" = load {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %".29"
  ret {i64, i8*, double, i1, i64, i64} %".30"
endif.1:
  %".32" = load {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}*, {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}** @"main_hashmap"
  %".33" = getelementptr {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}, {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}* %".32", i32 0, i32 4
  %".34" = load i64, i64* %".33"
  %"gt.2" = icmp sgt i64 %".34", 2
  %".35" = load {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}*, {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}** @"main_hashmap"
  %".36" = getelementptr {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}, {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}* %".35", i32 0, i32 2
  %".37" = getelementptr {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}* %".36", i32 0, i32 0
  %".38" = load i8*, i8** %".37"
  %"key.4" = load i8*, i8** %"key.1"
  %".39" = call i1 @"string_equals"(i8* %".38", i8* %"key.4")
  %"and.2" = and i1 %"gt.2", %".39"
  br i1 %"and.2", label %"then.2", label %"endif.2"
then.2:
  %".41" = load {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}*, {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}** @"main_hashmap"
  %".42" = getelementptr {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}, {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}* %".41", i32 0, i32 2
  %".43" = getelementptr {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}* %".42", i32 0, i32 1
  %".44" = load {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %".43"
  ret {i64, i8*, double, i1, i64, i64} %".44"
endif.2:
  %".46" = load {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}*, {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}** @"main_hashmap"
  %".47" = getelementptr {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}, {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}* %".46", i32 0, i32 4
  %".48" = load i64, i64* %".47"
  %"gt.3" = icmp sgt i64 %".48", 3
  %".49" = load {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}*, {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}** @"main_hashmap"
  %".50" = getelementptr {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}, {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}* %".49", i32 0, i32 3
  %".51" = getelementptr {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}* %".50", i32 0, i32 0
  %".52" = load i8*, i8** %".51"
  %"key.5" = load i8*, i8** %"key.1"
  %".53" = call i1 @"string_equals"(i8* %".52", i8* %"key.5")
  %"and.3" = and i1 %"gt.3", %".53"
  br i1 %"and.3", label %"then.3", label %"endif.3"
then.3:
  %".55" = load {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}*, {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}** @"main_hashmap"
  %".56" = getelementptr {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}, {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}* %".55", i32 0, i32 3
  %".57" = getelementptr {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}* %".56", i32 0, i32 1
  %".58" = load {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %".57"
  ret {i64, i8*, double, i1, i64, i64} %".58"
endif.3:
  %".60" = getelementptr {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* null, i32 1
  %".61" = ptrtoint {i64, i8*, double, i1, i64, i64}* %".60" to i64
  %".62" = call ccc i8* @"malloc"(i64 %".61")
  %".63" = bitcast i8* %".62" to {i64, i8*, double, i1, i64, i64}*
  %"TYPE_NULL" = load i64, i64* @"TYPE_NULL"
  %".64" = getelementptr {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %".63", i32 0, i32 0
  store i64 %"TYPE_NULL", i64* %".64"
  %".66" = getelementptr inbounds [1 x i8], [1 x i8]* @"str_120", i32 0, i32 0
  %".67" = getelementptr {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %".63", i32 0, i32 1
  store i8* %".66", i8** %".67"
  %".69" = getelementptr {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %".63", i32 0, i32 2
  store double              0x0, double* %".69"
  %".71" = getelementptr {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %".63", i32 0, i32 3
  store i1 false, i1* %".71"
  %"sub" = sub i64 0, 1
  %".73" = getelementptr {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %".63", i32 0, i32 4
  store i64 %"sub", i64* %".73"
  %"sub.1" = sub i64 0, 1
  %".75" = getelementptr {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %".63", i32 0, i32 5
  store i64 %"sub.1", i64* %".75"
  ret {i64, i8*, double, i1, i64, i64}* %".63"
}

define {i64, i8*, double, i1, i64, i64}* @"get_user"(i8* %"key")
{
entry:
  %"key.1" = alloca i8*
  store i8* %"key", i8** %"key.1"
  %".4" = load {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}*, {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}** @"user_hashmap"
  %".5" = getelementptr {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}, {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}* %".4", i32 0, i32 4
  %".6" = load i64, i64* %".5"
  %"gt" = icmp sgt i64 %".6", 0
  %".7" = load {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}*, {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}** @"user_hashmap"
  %".8" = getelementptr {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}, {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}* %".7", i32 0, i32 0
  %".9" = getelementptr {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}* %".8", i32 0, i32 0
  %".10" = load i8*, i8** %".9"
  %"key.2" = load i8*, i8** %"key.1"
  %".11" = call i1 @"string_equals"(i8* %".10", i8* %"key.2")
  %"and" = and i1 %"gt", %".11"
  br i1 %"and", label %"then", label %"endif"
then:
  %".13" = load {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}*, {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}** @"user_hashmap"
  %".14" = getelementptr {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}, {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}* %".13", i32 0, i32 0
  %".15" = getelementptr {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}* %".14", i32 0, i32 1
  %".16" = load {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %".15"
  ret {i64, i8*, double, i1, i64, i64} %".16"
endif:
  %".18" = load {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}*, {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}** @"user_hashmap"
  %".19" = getelementptr {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}, {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}* %".18", i32 0, i32 4
  %".20" = load i64, i64* %".19"
  %"gt.1" = icmp sgt i64 %".20", 1
  %".21" = load {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}*, {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}** @"user_hashmap"
  %".22" = getelementptr {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}, {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}* %".21", i32 0, i32 1
  %".23" = getelementptr {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}* %".22", i32 0, i32 0
  %".24" = load i8*, i8** %".23"
  %"key.3" = load i8*, i8** %"key.1"
  %".25" = call i1 @"string_equals"(i8* %".24", i8* %"key.3")
  %"and.1" = and i1 %"gt.1", %".25"
  br i1 %"and.1", label %"then.1", label %"endif.1"
then.1:
  %".27" = load {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}*, {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}** @"user_hashmap"
  %".28" = getelementptr {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}, {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}* %".27", i32 0, i32 1
  %".29" = getelementptr {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}* %".28", i32 0, i32 1
  %".30" = load {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %".29"
  ret {i64, i8*, double, i1, i64, i64} %".30"
endif.1:
  %".32" = load {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}*, {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}** @"user_hashmap"
  %".33" = getelementptr {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}, {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}* %".32", i32 0, i32 4
  %".34" = load i64, i64* %".33"
  %"gt.2" = icmp sgt i64 %".34", 2
  %".35" = load {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}*, {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}** @"user_hashmap"
  %".36" = getelementptr {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}, {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}* %".35", i32 0, i32 2
  %".37" = getelementptr {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}* %".36", i32 0, i32 0
  %".38" = load i8*, i8** %".37"
  %"key.4" = load i8*, i8** %"key.1"
  %".39" = call i1 @"string_equals"(i8* %".38", i8* %"key.4")
  %"and.2" = and i1 %"gt.2", %".39"
  br i1 %"and.2", label %"then.2", label %"endif.2"
then.2:
  %".41" = load {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}*, {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}** @"user_hashmap"
  %".42" = getelementptr {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}, {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}* %".41", i32 0, i32 2
  %".43" = getelementptr {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}* %".42", i32 0, i32 1
  %".44" = load {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %".43"
  ret {i64, i8*, double, i1, i64, i64} %".44"
endif.2:
  %".46" = load {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}*, {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}** @"user_hashmap"
  %".47" = getelementptr {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}, {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}* %".46", i32 0, i32 4
  %".48" = load i64, i64* %".47"
  %"gt.3" = icmp sgt i64 %".48", 3
  %".49" = load {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}*, {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}** @"user_hashmap"
  %".50" = getelementptr {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}, {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}* %".49", i32 0, i32 3
  %".51" = getelementptr {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}* %".50", i32 0, i32 0
  %".52" = load i8*, i8** %".51"
  %"key.5" = load i8*, i8** %"key.1"
  %".53" = call i1 @"string_equals"(i8* %".52", i8* %"key.5")
  %"and.3" = and i1 %"gt.3", %".53"
  br i1 %"and.3", label %"then.3", label %"endif.3"
then.3:
  %".55" = load {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}*, {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}** @"user_hashmap"
  %".56" = getelementptr {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}, {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}* %".55", i32 0, i32 3
  %".57" = getelementptr {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}* %".56", i32 0, i32 1
  %".58" = load {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %".57"
  ret {i64, i8*, double, i1, i64, i64} %".58"
endif.3:
  %".60" = getelementptr {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* null, i32 1
  %".61" = ptrtoint {i64, i8*, double, i1, i64, i64}* %".60" to i64
  %".62" = call ccc i8* @"malloc"(i64 %".61")
  %".63" = bitcast i8* %".62" to {i64, i8*, double, i1, i64, i64}*
  %"TYPE_NULL" = load i64, i64* @"TYPE_NULL"
  %".64" = getelementptr {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %".63", i32 0, i32 0
  store i64 %"TYPE_NULL", i64* %".64"
  %".66" = getelementptr inbounds [1 x i8], [1 x i8]* @"str_121", i32 0, i32 0
  %".67" = getelementptr {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %".63", i32 0, i32 1
  store i8* %".66", i8** %".67"
  %".69" = getelementptr {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %".63", i32 0, i32 2
  store double              0x0, double* %".69"
  %".71" = getelementptr {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %".63", i32 0, i32 3
  store i1 false, i1* %".71"
  %"sub" = sub i64 0, 1
  %".73" = getelementptr {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %".63", i32 0, i32 4
  store i64 %"sub", i64* %".73"
  %"sub.1" = sub i64 0, 1
  %".75" = getelementptr {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %".63", i32 0, i32 5
  store i64 %"sub.1", i64* %".75"
  ret {i64, i8*, double, i1, i64, i64}* %".63"
}

define {i64, i8*, double, i1, i64, i64}* @"get_item"(i64 %"index")
{
entry:
  %"index.1" = alloca i64
  store i64 %"index", i64* %"index.1"
  %"index.2" = load i64, i64* %"index.1"
  %"eq" = icmp eq i64 %"index.2", 0
  %".4" = load {{i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, i64}*, {{i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, i64}** @"items_array"
  %".5" = getelementptr {{i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, i64}, {{i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, i64}* %".4", i32 0, i32 4
  %".6" = load i64, i64* %".5"
  %"gt" = icmp sgt i64 %".6", 0
  %"and" = and i1 %"eq", %"gt"
  br i1 %"and", label %"then", label %"endif"
then:
  %".8" = load {{i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, i64}*, {{i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, i64}** @"items_array"
  %".9" = getelementptr {{i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, i64}, {{i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, i64}* %".8", i32 0, i32 0
  %".10" = load {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %".9"
  %".11" = alloca {i64, i8*, double, i1, i64, i64}
  store {i64, i8*, double, i1, i64, i64} %".10", {i64, i8*, double, i1, i64, i64}* %".11"
  ret {i64, i8*, double, i1, i64, i64}* %".11"
endif:
  %"index.3" = load i64, i64* %"index.1"
  %"eq.1" = icmp eq i64 %"index.3", 1
  %".14" = load {{i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, i64}*, {{i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, i64}** @"items_array"
  %".15" = getelementptr {{i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, i64}, {{i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, i64}* %".14", i32 0, i32 4
  %".16" = load i64, i64* %".15"
  %"gt.1" = icmp sgt i64 %".16", 1
  %"and.1" = and i1 %"eq.1", %"gt.1"
  br i1 %"and.1", label %"then.1", label %"endif.1"
then.1:
  %".18" = load {{i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, i64}*, {{i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, i64}** @"items_array"
  %".19" = getelementptr {{i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, i64}, {{i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, i64}* %".18", i32 0, i32 1
  %".20" = load {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %".19"
  %".21" = alloca {i64, i8*, double, i1, i64, i64}
  store {i64, i8*, double, i1, i64, i64} %".20", {i64, i8*, double, i1, i64, i64}* %".21"
  ret {i64, i8*, double, i1, i64, i64}* %".21"
endif.1:
  %"index.4" = load i64, i64* %"index.1"
  %"eq.2" = icmp eq i64 %"index.4", 2
  %".24" = load {{i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, i64}*, {{i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, i64}** @"items_array"
  %".25" = getelementptr {{i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, i64}, {{i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, i64}* %".24", i32 0, i32 4
  %".26" = load i64, i64* %".25"
  %"gt.2" = icmp sgt i64 %".26", 2
  %"and.2" = and i1 %"eq.2", %"gt.2"
  br i1 %"and.2", label %"then.2", label %"endif.2"
then.2:
  %".28" = load {{i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, i64}*, {{i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, i64}** @"items_array"
  %".29" = getelementptr {{i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, i64}, {{i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, i64}* %".28", i32 0, i32 2
  %".30" = load {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %".29"
  %".31" = alloca {i64, i8*, double, i1, i64, i64}
  store {i64, i8*, double, i1, i64, i64} %".30", {i64, i8*, double, i1, i64, i64}* %".31"
  ret {i64, i8*, double, i1, i64, i64}* %".31"
endif.2:
  %"index.5" = load i64, i64* %"index.1"
  %"eq.3" = icmp eq i64 %"index.5", 3
  %".34" = load {{i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, i64}*, {{i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, i64}** @"items_array"
  %".35" = getelementptr {{i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, i64}, {{i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, i64}* %".34", i32 0, i32 4
  %".36" = load i64, i64* %".35"
  %"gt.3" = icmp sgt i64 %".36", 3
  %"and.3" = and i1 %"eq.3", %"gt.3"
  br i1 %"and.3", label %"then.3", label %"endif.3"
then.3:
  %".38" = load {{i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, i64}*, {{i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, i64}** @"items_array"
  %".39" = getelementptr {{i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, i64}, {{i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, i64}* %".38", i32 0, i32 3
  %".40" = load {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %".39"
  %".41" = alloca {i64, i8*, double, i1, i64, i64}
  store {i64, i8*, double, i1, i64, i64} %".40", {i64, i8*, double, i1, i64, i64}* %".41"
  ret {i64, i8*, double, i1, i64, i64}* %".41"
endif.3:
  %".44" = getelementptr {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* null, i32 1
  %".45" = ptrtoint {i64, i8*, double, i1, i64, i64}* %".44" to i64
  %".46" = call ccc i8* @"malloc"(i64 %".45")
  %".47" = bitcast i8* %".46" to {i64, i8*, double, i1, i64, i64}*
  %"TYPE_NULL" = load i64, i64* @"TYPE_NULL"
  %".48" = getelementptr {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %".47", i32 0, i32 0
  store i64 %"TYPE_NULL", i64* %".48"
  %".50" = getelementptr inbounds [1 x i8], [1 x i8]* @"str_122", i32 0, i32 0
  %".51" = getelementptr {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %".47", i32 0, i32 1
  store i8* %".50", i8** %".51"
  %".53" = getelementptr {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %".47", i32 0, i32 2
  store double              0x0, double* %".53"
  %".55" = getelementptr {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %".47", i32 0, i32 3
  store i1 false, i1* %".55"
  %"sub" = sub i64 0, 1
  %".57" = getelementptr {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %".47", i32 0, i32 4
  store i64 %"sub", i64* %".57"
  %"sub.1" = sub i64 0, 1
  %".59" = getelementptr {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %".47", i32 0, i32 5
  store i64 %"sub.1", i64* %".59"
  ret {i64, i8*, double, i1, i64, i64}* %".47"
}

define i1 @"string_equals"(i8* %"s1", i8* %"s2")
{
entry:
  %"s1.1" = alloca i8*
  store i8* %"s1", i8** %"s1.1"
  %"s2.1" = alloca i8*
  store i8* %"s2", i8** %"s2.1"
  %"i" = alloca i64
  store i64 0, i64* %"i"
  br label %"while_cond"
while_cond:
  %"i.1" = load i64, i64* %"i"
  %".8" = load i8*, i8** %"s1.1"
  %".9" = trunc i64 %"i.1" to i32
  %".10" = getelementptr inbounds i8, i8* %".8", i32 %".9"
  %".11" = load i8, i8* %".10"
  %".12" = call ccc i8* @"char_to_str"(i8 %".11")
  %".13" = load i8, i8* %".12"
  %"neq" = icmp ne i8 %".13", 0
  %"i.2" = load i64, i64* %"i"
  %".14" = load i8*, i8** %"s2.1"
  %".15" = trunc i64 %"i.2" to i32
  %".16" = getelementptr inbounds i8, i8* %".14", i32 %".15"
  %".17" = load i8, i8* %".16"
  %".18" = call ccc i8* @"char_to_str"(i8 %".17")
  %".19" = load i8, i8* %".18"
  %"neq.1" = icmp ne i8 %".19", 0
  %"and" = and i1 %"neq", %"neq.1"
  br i1 %"and", label %"while_body", label %"while_end"
while_body:
  %"i.3" = load i64, i64* %"i"
  %".21" = load i8*, i8** %"s1.1"
  %".22" = trunc i64 %"i.3" to i32
  %".23" = getelementptr inbounds i8, i8* %".21", i32 %".22"
  %".24" = load i8, i8* %".23"
  %".25" = call ccc i8* @"char_to_str"(i8 %".24")
  %"i.4" = load i64, i64* %"i"
  %".26" = load i8*, i8** %"s2.1"
  %".27" = trunc i64 %"i.4" to i32
  %".28" = getelementptr inbounds i8, i8* %".26", i32 %".27"
  %".29" = load i8, i8* %".28"
  %".30" = call ccc i8* @"char_to_str"(i8 %".29")
  %".31" = call ccc i32 @"strcmp"(i8* %".25", i8* %".30")
  %"neq.2" = icmp ne i32 %".31", 0
  br i1 %"neq.2", label %"then", label %"endif"
while_end:
  %"i.6" = load i64, i64* %"i"
  %".36" = load i8*, i8** %"s1.1"
  %".37" = trunc i64 %"i.6" to i32
  %".38" = getelementptr inbounds i8, i8* %".36", i32 %".37"
  %".39" = load i8, i8* %".38"
  %".40" = call ccc i8* @"char_to_str"(i8 %".39")
  %"i.7" = load i64, i64* %"i"
  %".41" = load i8*, i8** %"s2.1"
  %".42" = trunc i64 %"i.7" to i32
  %".43" = getelementptr inbounds i8, i8* %".41", i32 %".42"
  %".44" = load i8, i8* %".43"
  %".45" = call ccc i8* @"char_to_str"(i8 %".44")
  %".46" = call ccc i32 @"strcmp"(i8* %".40", i8* %".45")
  %"eq" = icmp eq i32 %".46", 0
  ret i1 %"eq"
then:
  ret i1 false
endif:
  %"i.5" = load i64, i64* %"i"
  %"add" = add i64 %"i.5", 1
  store i64 %"add", i64* %"i"
  br label %"while_cond"
}

@"user_obj" = internal global {i64, i8*, double, i1, i64, i64}* null
@"items_obj" = internal global {i64, i8*, double, i1, i64, i64}* null
define i32 @"main"()
{
entry:
  store i64 0, i64* @"allocation_count"
  %".3" = call ccc i32 @"SetConsoleOutputCP"(i32 65001)
  store i64 0, i64* @"TYPE_NULL"
  store i64 1, i64* @"TYPE_STRING"
  store i64 2, i64* @"TYPE_NUMBER"
  store i64 3, i64* @"TYPE_BOOLEAN"
  store i64 4, i64* @"TYPE_OBJECT"
  store i64 5, i64* @"TYPE_ARRAY"
  %".10" = getelementptr {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}, {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}* null, i32 1
  %".11" = ptrtoint {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}* %".10" to i64
  %".12" = call ccc i8* @"malloc"(i64 %".11")
  %".13" = load i64, i64* @"allocation_count"
  %".14" = getelementptr inbounds [100 x i8*], [100 x i8*]* @"allocation_array", i64 0, i64 %".13"
  store i8* %".12", i8** %".14"
  %".16" = add i64 %".13", 1
  store i64 %".16", i64* @"allocation_count"
  %".18" = bitcast i8* %".12" to {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}*
  %".19" = getelementptr {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}* null, i32 1
  %".20" = ptrtoint {i8*, {i64, i8*, double, i1, i64, i64}}* %".19" to i64
  %".21" = call ccc i8* @"malloc"(i64 %".20")
  %".22" = load i64, i64* @"allocation_count"
  %".23" = getelementptr inbounds [100 x i8*], [100 x i8*]* @"allocation_array", i64 0, i64 %".22"
  store i8* %".21", i8** %".23"
  %".25" = add i64 %".22", 1
  store i64 %".25", i64* @"allocation_count"
  %".27" = bitcast i8* %".21" to {i8*, {i64, i8*, double, i1, i64, i64}}*
  %".28" = getelementptr inbounds [1 x i8], [1 x i8]* @"str_45", i32 0, i32 0
  %".29" = getelementptr {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}* %".27", i32 0, i32 0
  store i8* %".28", i8** %".29"
  %".31" = getelementptr {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* null, i32 1
  %".32" = ptrtoint {i64, i8*, double, i1, i64, i64}* %".31" to i64
  %".33" = call ccc i8* @"malloc"(i64 %".32")
  %".34" = load i64, i64* @"allocation_count"
  %".35" = getelementptr inbounds [100 x i8*], [100 x i8*]* @"allocation_array", i64 0, i64 %".34"
  store i8* %".33", i8** %".35"
  %".37" = add i64 %".34", 1
  store i64 %".37", i64* @"allocation_count"
  %".39" = bitcast i8* %".33" to {i64, i8*, double, i1, i64, i64}*
  %".40" = getelementptr {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %".39", i32 0, i32 0
  store i64 0, i64* %".40"
  %".42" = getelementptr inbounds [1 x i8], [1 x i8]* @"str_46", i32 0, i32 0
  %".43" = getelementptr {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %".39", i32 0, i32 1
  store i8* %".42", i8** %".43"
  %".45" = getelementptr {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %".39", i32 0, i32 2
  store double              0x0, double* %".45"
  %".47" = getelementptr {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %".39", i32 0, i32 3
  store i1 false, i1* %".47"
  %"sub" = sub i64 0, 1
  %".49" = getelementptr {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %".39", i32 0, i32 4
  store i64 %"sub", i64* %".49"
  %"sub.1" = sub i64 0, 1
  %".51" = getelementptr {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %".39", i32 0, i32 5
  store i64 %"sub.1", i64* %".51"
  %".53" = getelementptr {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}* %".27", i32 0, i32 1
  %".54" = load {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %".39"
  store {i64, i8*, double, i1, i64, i64} %".54", {i64, i8*, double, i1, i64, i64}* %".53"
  %".56" = getelementptr {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}, {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}* %".18", i32 0, i32 0
  %".57" = load {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}* %".27"
  store {i8*, {i64, i8*, double, i1, i64, i64}} %".57", {i8*, {i64, i8*, double, i1, i64, i64}}* %".56"
  %".59" = getelementptr {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}* null, i32 1
  %".60" = ptrtoint {i8*, {i64, i8*, double, i1, i64, i64}}* %".59" to i64
  %".61" = call ccc i8* @"malloc"(i64 %".60")
  %".62" = load i64, i64* @"allocation_count"
  %".63" = getelementptr inbounds [100 x i8*], [100 x i8*]* @"allocation_array", i64 0, i64 %".62"
  store i8* %".61", i8** %".63"
  %".65" = add i64 %".62", 1
  store i64 %".65", i64* @"allocation_count"
  %".67" = bitcast i8* %".61" to {i8*, {i64, i8*, double, i1, i64, i64}}*
  %".68" = getelementptr inbounds [1 x i8], [1 x i8]* @"str_47", i32 0, i32 0
  %".69" = getelementptr {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}* %".67", i32 0, i32 0
  store i8* %".68", i8** %".69"
  %".71" = getelementptr {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* null, i32 1
  %".72" = ptrtoint {i64, i8*, double, i1, i64, i64}* %".71" to i64
  %".73" = call ccc i8* @"malloc"(i64 %".72")
  %".74" = load i64, i64* @"allocation_count"
  %".75" = getelementptr inbounds [100 x i8*], [100 x i8*]* @"allocation_array", i64 0, i64 %".74"
  store i8* %".73", i8** %".75"
  %".77" = add i64 %".74", 1
  store i64 %".77", i64* @"allocation_count"
  %".79" = bitcast i8* %".73" to {i64, i8*, double, i1, i64, i64}*
  %".80" = getelementptr {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %".79", i32 0, i32 0
  store i64 0, i64* %".80"
  %".82" = getelementptr inbounds [1 x i8], [1 x i8]* @"str_48", i32 0, i32 0
  %".83" = getelementptr {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %".79", i32 0, i32 1
  store i8* %".82", i8** %".83"
  %".85" = getelementptr {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %".79", i32 0, i32 2
  store double              0x0, double* %".85"
  %".87" = getelementptr {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %".79", i32 0, i32 3
  store i1 false, i1* %".87"
  %"sub.2" = sub i64 0, 1
  %".89" = getelementptr {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %".79", i32 0, i32 4
  store i64 %"sub.2", i64* %".89"
  %"sub.3" = sub i64 0, 1
  %".91" = getelementptr {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %".79", i32 0, i32 5
  store i64 %"sub.3", i64* %".91"
  %".93" = getelementptr {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}* %".67", i32 0, i32 1
  %".94" = load {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %".79"
  store {i64, i8*, double, i1, i64, i64} %".94", {i64, i8*, double, i1, i64, i64}* %".93"
  %".96" = getelementptr {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}, {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}* %".18", i32 0, i32 1
  %".97" = load {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}* %".67"
  store {i8*, {i64, i8*, double, i1, i64, i64}} %".97", {i8*, {i64, i8*, double, i1, i64, i64}}* %".96"
  %".99" = getelementptr {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}* null, i32 1
  %".100" = ptrtoint {i8*, {i64, i8*, double, i1, i64, i64}}* %".99" to i64
  %".101" = call ccc i8* @"malloc"(i64 %".100")
  %".102" = load i64, i64* @"allocation_count"
  %".103" = getelementptr inbounds [100 x i8*], [100 x i8*]* @"allocation_array", i64 0, i64 %".102"
  store i8* %".101", i8** %".103"
  %".105" = add i64 %".102", 1
  store i64 %".105", i64* @"allocation_count"
  %".107" = bitcast i8* %".101" to {i8*, {i64, i8*, double, i1, i64, i64}}*
  %".108" = getelementptr inbounds [1 x i8], [1 x i8]* @"str_49", i32 0, i32 0
  %".109" = getelementptr {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}* %".107", i32 0, i32 0
  store i8* %".108", i8** %".109"
  %".111" = getelementptr {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* null, i32 1
  %".112" = ptrtoint {i64, i8*, double, i1, i64, i64}* %".111" to i64
  %".113" = call ccc i8* @"malloc"(i64 %".112")
  %".114" = load i64, i64* @"allocation_count"
  %".115" = getelementptr inbounds [100 x i8*], [100 x i8*]* @"allocation_array", i64 0, i64 %".114"
  store i8* %".113", i8** %".115"
  %".117" = add i64 %".114", 1
  store i64 %".117", i64* @"allocation_count"
  %".119" = bitcast i8* %".113" to {i64, i8*, double, i1, i64, i64}*
  %".120" = getelementptr {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %".119", i32 0, i32 0
  store i64 0, i64* %".120"
  %".122" = getelementptr inbounds [1 x i8], [1 x i8]* @"str_50", i32 0, i32 0
  %".123" = getelementptr {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %".119", i32 0, i32 1
  store i8* %".122", i8** %".123"
  %".125" = getelementptr {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %".119", i32 0, i32 2
  store double              0x0, double* %".125"
  %".127" = getelementptr {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %".119", i32 0, i32 3
  store i1 false, i1* %".127"
  %"sub.4" = sub i64 0, 1
  %".129" = getelementptr {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %".119", i32 0, i32 4
  store i64 %"sub.4", i64* %".129"
  %"sub.5" = sub i64 0, 1
  %".131" = getelementptr {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %".119", i32 0, i32 5
  store i64 %"sub.5", i64* %".131"
  %".133" = getelementptr {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}* %".107", i32 0, i32 1
  %".134" = load {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %".119"
  store {i64, i8*, double, i1, i64, i64} %".134", {i64, i8*, double, i1, i64, i64}* %".133"
  %".136" = getelementptr {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}, {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}* %".18", i32 0, i32 2
  %".137" = load {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}* %".107"
  store {i8*, {i64, i8*, double, i1, i64, i64}} %".137", {i8*, {i64, i8*, double, i1, i64, i64}}* %".136"
  %".139" = getelementptr {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}* null, i32 1
  %".140" = ptrtoint {i8*, {i64, i8*, double, i1, i64, i64}}* %".139" to i64
  %".141" = call ccc i8* @"malloc"(i64 %".140")
  %".142" = load i64, i64* @"allocation_count"
  %".143" = getelementptr inbounds [100 x i8*], [100 x i8*]* @"allocation_array", i64 0, i64 %".142"
  store i8* %".141", i8** %".143"
  %".145" = add i64 %".142", 1
  store i64 %".145", i64* @"allocation_count"
  %".147" = bitcast i8* %".141" to {i8*, {i64, i8*, double, i1, i64, i64}}*
  %".148" = getelementptr inbounds [1 x i8], [1 x i8]* @"str_51", i32 0, i32 0
  %".149" = getelementptr {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}* %".147", i32 0, i32 0
  store i8* %".148", i8** %".149"
  %".151" = getelementptr {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* null, i32 1
  %".152" = ptrtoint {i64, i8*, double, i1, i64, i64}* %".151" to i64
  %".153" = call ccc i8* @"malloc"(i64 %".152")
  %".154" = load i64, i64* @"allocation_count"
  %".155" = getelementptr inbounds [100 x i8*], [100 x i8*]* @"allocation_array", i64 0, i64 %".154"
  store i8* %".153", i8** %".155"
  %".157" = add i64 %".154", 1
  store i64 %".157", i64* @"allocation_count"
  %".159" = bitcast i8* %".153" to {i64, i8*, double, i1, i64, i64}*
  %".160" = getelementptr {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %".159", i32 0, i32 0
  store i64 0, i64* %".160"
  %".162" = getelementptr inbounds [1 x i8], [1 x i8]* @"str_52", i32 0, i32 0
  %".163" = getelementptr {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %".159", i32 0, i32 1
  store i8* %".162", i8** %".163"
  %".165" = getelementptr {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %".159", i32 0, i32 2
  store double              0x0, double* %".165"
  %".167" = getelementptr {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %".159", i32 0, i32 3
  store i1 false, i1* %".167"
  %"sub.6" = sub i64 0, 1
  %".169" = getelementptr {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %".159", i32 0, i32 4
  store i64 %"sub.6", i64* %".169"
  %"sub.7" = sub i64 0, 1
  %".171" = getelementptr {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %".159", i32 0, i32 5
  store i64 %"sub.7", i64* %".171"
  %".173" = getelementptr {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}* %".147", i32 0, i32 1
  %".174" = load {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %".159"
  store {i64, i8*, double, i1, i64, i64} %".174", {i64, i8*, double, i1, i64, i64}* %".173"
  %".176" = getelementptr {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}, {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}* %".18", i32 0, i32 3
  %".177" = load {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}* %".147"
  store {i8*, {i64, i8*, double, i1, i64, i64}} %".177", {i8*, {i64, i8*, double, i1, i64, i64}}* %".176"
  %".179" = getelementptr {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}, {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}* %".18", i32 0, i32 4
  store i64 0, i64* %".179"
  store {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}* %".18", {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}** @"main_hashmap"
  %".182" = getelementptr {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}, {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}* null, i32 1
  %".183" = ptrtoint {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}* %".182" to i64
  %".184" = call ccc i8* @"malloc"(i64 %".183")
  %".185" = load i64, i64* @"allocation_count"
  %".186" = getelementptr inbounds [100 x i8*], [100 x i8*]* @"allocation_array", i64 0, i64 %".185"
  store i8* %".184", i8** %".186"
  %".188" = add i64 %".185", 1
  store i64 %".188", i64* @"allocation_count"
  %".190" = bitcast i8* %".184" to {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}*
  %".191" = getelementptr {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}* null, i32 1
  %".192" = ptrtoint {i8*, {i64, i8*, double, i1, i64, i64}}* %".191" to i64
  %".193" = call ccc i8* @"malloc"(i64 %".192")
  %".194" = load i64, i64* @"allocation_count"
  %".195" = getelementptr inbounds [100 x i8*], [100 x i8*]* @"allocation_array", i64 0, i64 %".194"
  store i8* %".193", i8** %".195"
  %".197" = add i64 %".194", 1
  store i64 %".197", i64* @"allocation_count"
  %".199" = bitcast i8* %".193" to {i8*, {i64, i8*, double, i1, i64, i64}}*
  %".200" = getelementptr inbounds [1 x i8], [1 x i8]* @"str_53", i32 0, i32 0
  %".201" = getelementptr {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}* %".199", i32 0, i32 0
  store i8* %".200", i8** %".201"
  %".203" = getelementptr {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* null, i32 1
  %".204" = ptrtoint {i64, i8*, double, i1, i64, i64}* %".203" to i64
  %".205" = call ccc i8* @"malloc"(i64 %".204")
  %".206" = load i64, i64* @"allocation_count"
  %".207" = getelementptr inbounds [100 x i8*], [100 x i8*]* @"allocation_array", i64 0, i64 %".206"
  store i8* %".205", i8** %".207"
  %".209" = add i64 %".206", 1
  store i64 %".209", i64* @"allocation_count"
  %".211" = bitcast i8* %".205" to {i64, i8*, double, i1, i64, i64}*
  %".212" = getelementptr {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %".211", i32 0, i32 0
  store i64 0, i64* %".212"
  %".214" = getelementptr inbounds [1 x i8], [1 x i8]* @"str_54", i32 0, i32 0
  %".215" = getelementptr {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %".211", i32 0, i32 1
  store i8* %".214", i8** %".215"
  %".217" = getelementptr {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %".211", i32 0, i32 2
  store double              0x0, double* %".217"
  %".219" = getelementptr {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %".211", i32 0, i32 3
  store i1 false, i1* %".219"
  %"sub.8" = sub i64 0, 1
  %".221" = getelementptr {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %".211", i32 0, i32 4
  store i64 %"sub.8", i64* %".221"
  %"sub.9" = sub i64 0, 1
  %".223" = getelementptr {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %".211", i32 0, i32 5
  store i64 %"sub.9", i64* %".223"
  %".225" = getelementptr {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}* %".199", i32 0, i32 1
  %".226" = load {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %".211"
  store {i64, i8*, double, i1, i64, i64} %".226", {i64, i8*, double, i1, i64, i64}* %".225"
  %".228" = getelementptr {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}, {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}* %".190", i32 0, i32 0
  %".229" = load {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}* %".199"
  store {i8*, {i64, i8*, double, i1, i64, i64}} %".229", {i8*, {i64, i8*, double, i1, i64, i64}}* %".228"
  %".231" = getelementptr {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}* null, i32 1
  %".232" = ptrtoint {i8*, {i64, i8*, double, i1, i64, i64}}* %".231" to i64
  %".233" = call ccc i8* @"malloc"(i64 %".232")
  %".234" = load i64, i64* @"allocation_count"
  %".235" = getelementptr inbounds [100 x i8*], [100 x i8*]* @"allocation_array", i64 0, i64 %".234"
  store i8* %".233", i8** %".235"
  %".237" = add i64 %".234", 1
  store i64 %".237", i64* @"allocation_count"
  %".239" = bitcast i8* %".233" to {i8*, {i64, i8*, double, i1, i64, i64}}*
  %".240" = getelementptr inbounds [1 x i8], [1 x i8]* @"str_55", i32 0, i32 0
  %".241" = getelementptr {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}* %".239", i32 0, i32 0
  store i8* %".240", i8** %".241"
  %".243" = getelementptr {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* null, i32 1
  %".244" = ptrtoint {i64, i8*, double, i1, i64, i64}* %".243" to i64
  %".245" = call ccc i8* @"malloc"(i64 %".244")
  %".246" = load i64, i64* @"allocation_count"
  %".247" = getelementptr inbounds [100 x i8*], [100 x i8*]* @"allocation_array", i64 0, i64 %".246"
  store i8* %".245", i8** %".247"
  %".249" = add i64 %".246", 1
  store i64 %".249", i64* @"allocation_count"
  %".251" = bitcast i8* %".245" to {i64, i8*, double, i1, i64, i64}*
  %".252" = getelementptr {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %".251", i32 0, i32 0
  store i64 0, i64* %".252"
  %".254" = getelementptr inbounds [1 x i8], [1 x i8]* @"str_56", i32 0, i32 0
  %".255" = getelementptr {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %".251", i32 0, i32 1
  store i8* %".254", i8** %".255"
  %".257" = getelementptr {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %".251", i32 0, i32 2
  store double              0x0, double* %".257"
  %".259" = getelementptr {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %".251", i32 0, i32 3
  store i1 false, i1* %".259"
  %"sub.10" = sub i64 0, 1
  %".261" = getelementptr {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %".251", i32 0, i32 4
  store i64 %"sub.10", i64* %".261"
  %"sub.11" = sub i64 0, 1
  %".263" = getelementptr {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %".251", i32 0, i32 5
  store i64 %"sub.11", i64* %".263"
  %".265" = getelementptr {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}* %".239", i32 0, i32 1
  %".266" = load {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %".251"
  store {i64, i8*, double, i1, i64, i64} %".266", {i64, i8*, double, i1, i64, i64}* %".265"
  %".268" = getelementptr {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}, {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}* %".190", i32 0, i32 1
  %".269" = load {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}* %".239"
  store {i8*, {i64, i8*, double, i1, i64, i64}} %".269", {i8*, {i64, i8*, double, i1, i64, i64}}* %".268"
  %".271" = getelementptr {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}* null, i32 1
  %".272" = ptrtoint {i8*, {i64, i8*, double, i1, i64, i64}}* %".271" to i64
  %".273" = call ccc i8* @"malloc"(i64 %".272")
  %".274" = load i64, i64* @"allocation_count"
  %".275" = getelementptr inbounds [100 x i8*], [100 x i8*]* @"allocation_array", i64 0, i64 %".274"
  store i8* %".273", i8** %".275"
  %".277" = add i64 %".274", 1
  store i64 %".277", i64* @"allocation_count"
  %".279" = bitcast i8* %".273" to {i8*, {i64, i8*, double, i1, i64, i64}}*
  %".280" = getelementptr inbounds [1 x i8], [1 x i8]* @"str_57", i32 0, i32 0
  %".281" = getelementptr {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}* %".279", i32 0, i32 0
  store i8* %".280", i8** %".281"
  %".283" = getelementptr {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* null, i32 1
  %".284" = ptrtoint {i64, i8*, double, i1, i64, i64}* %".283" to i64
  %".285" = call ccc i8* @"malloc"(i64 %".284")
  %".286" = load i64, i64* @"allocation_count"
  %".287" = getelementptr inbounds [100 x i8*], [100 x i8*]* @"allocation_array", i64 0, i64 %".286"
  store i8* %".285", i8** %".287"
  %".289" = add i64 %".286", 1
  store i64 %".289", i64* @"allocation_count"
  %".291" = bitcast i8* %".285" to {i64, i8*, double, i1, i64, i64}*
  %".292" = getelementptr {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %".291", i32 0, i32 0
  store i64 0, i64* %".292"
  %".294" = getelementptr inbounds [1 x i8], [1 x i8]* @"str_58", i32 0, i32 0
  %".295" = getelementptr {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %".291", i32 0, i32 1
  store i8* %".294", i8** %".295"
  %".297" = getelementptr {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %".291", i32 0, i32 2
  store double              0x0, double* %".297"
  %".299" = getelementptr {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %".291", i32 0, i32 3
  store i1 false, i1* %".299"
  %"sub.12" = sub i64 0, 1
  %".301" = getelementptr {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %".291", i32 0, i32 4
  store i64 %"sub.12", i64* %".301"
  %"sub.13" = sub i64 0, 1
  %".303" = getelementptr {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %".291", i32 0, i32 5
  store i64 %"sub.13", i64* %".303"
  %".305" = getelementptr {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}* %".279", i32 0, i32 1
  %".306" = load {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %".291"
  store {i64, i8*, double, i1, i64, i64} %".306", {i64, i8*, double, i1, i64, i64}* %".305"
  %".308" = getelementptr {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}, {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}* %".190", i32 0, i32 2
  %".309" = load {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}* %".279"
  store {i8*, {i64, i8*, double, i1, i64, i64}} %".309", {i8*, {i64, i8*, double, i1, i64, i64}}* %".308"
  %".311" = getelementptr {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}* null, i32 1
  %".312" = ptrtoint {i8*, {i64, i8*, double, i1, i64, i64}}* %".311" to i64
  %".313" = call ccc i8* @"malloc"(i64 %".312")
  %".314" = load i64, i64* @"allocation_count"
  %".315" = getelementptr inbounds [100 x i8*], [100 x i8*]* @"allocation_array", i64 0, i64 %".314"
  store i8* %".313", i8** %".315"
  %".317" = add i64 %".314", 1
  store i64 %".317", i64* @"allocation_count"
  %".319" = bitcast i8* %".313" to {i8*, {i64, i8*, double, i1, i64, i64}}*
  %".320" = getelementptr inbounds [1 x i8], [1 x i8]* @"str_59", i32 0, i32 0
  %".321" = getelementptr {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}* %".319", i32 0, i32 0
  store i8* %".320", i8** %".321"
  %".323" = getelementptr {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* null, i32 1
  %".324" = ptrtoint {i64, i8*, double, i1, i64, i64}* %".323" to i64
  %".325" = call ccc i8* @"malloc"(i64 %".324")
  %".326" = load i64, i64* @"allocation_count"
  %".327" = getelementptr inbounds [100 x i8*], [100 x i8*]* @"allocation_array", i64 0, i64 %".326"
  store i8* %".325", i8** %".327"
  %".329" = add i64 %".326", 1
  store i64 %".329", i64* @"allocation_count"
  %".331" = bitcast i8* %".325" to {i64, i8*, double, i1, i64, i64}*
  %".332" = getelementptr {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %".331", i32 0, i32 0
  store i64 0, i64* %".332"
  %".334" = getelementptr inbounds [1 x i8], [1 x i8]* @"str_60", i32 0, i32 0
  %".335" = getelementptr {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %".331", i32 0, i32 1
  store i8* %".334", i8** %".335"
  %".337" = getelementptr {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %".331", i32 0, i32 2
  store double              0x0, double* %".337"
  %".339" = getelementptr {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %".331", i32 0, i32 3
  store i1 false, i1* %".339"
  %"sub.14" = sub i64 0, 1
  %".341" = getelementptr {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %".331", i32 0, i32 4
  store i64 %"sub.14", i64* %".341"
  %"sub.15" = sub i64 0, 1
  %".343" = getelementptr {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %".331", i32 0, i32 5
  store i64 %"sub.15", i64* %".343"
  %".345" = getelementptr {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}* %".319", i32 0, i32 1
  %".346" = load {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %".331"
  store {i64, i8*, double, i1, i64, i64} %".346", {i64, i8*, double, i1, i64, i64}* %".345"
  %".348" = getelementptr {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}, {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}* %".190", i32 0, i32 3
  %".349" = load {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}* %".319"
  store {i8*, {i64, i8*, double, i1, i64, i64}} %".349", {i8*, {i64, i8*, double, i1, i64, i64}}* %".348"
  %".351" = getelementptr {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}, {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}* %".190", i32 0, i32 4
  store i64 0, i64* %".351"
  store {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}* %".190", {{i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, {i8*, {i64, i8*, double, i1, i64, i64}}, i64}** @"user_hashmap"
  %".354" = getelementptr {{i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, i64}, {{i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, i64}* null, i32 1
  %".355" = ptrtoint {{i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, i64}* %".354" to i64
  %".356" = call ccc i8* @"malloc"(i64 %".355")
  %".357" = load i64, i64* @"allocation_count"
  %".358" = getelementptr inbounds [100 x i8*], [100 x i8*]* @"allocation_array", i64 0, i64 %".357"
  store i8* %".356", i8** %".358"
  %".360" = add i64 %".357", 1
  store i64 %".360", i64* @"allocation_count"
  %".362" = bitcast i8* %".356" to {{i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, i64}*
  %".363" = getelementptr {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* null, i32 1
  %".364" = ptrtoint {i64, i8*, double, i1, i64, i64}* %".363" to i64
  %".365" = call ccc i8* @"malloc"(i64 %".364")
  %".366" = load i64, i64* @"allocation_count"
  %".367" = getelementptr inbounds [100 x i8*], [100 x i8*]* @"allocation_array", i64 0, i64 %".366"
  store i8* %".365", i8** %".367"
  %".369" = add i64 %".366", 1
  store i64 %".369", i64* @"allocation_count"
  %".371" = bitcast i8* %".365" to {i64, i8*, double, i1, i64, i64}*
  %".372" = getelementptr {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %".371", i32 0, i32 0
  store i64 0, i64* %".372"
  %".374" = getelementptr inbounds [1 x i8], [1 x i8]* @"str_61", i32 0, i32 0
  %".375" = getelementptr {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %".371", i32 0, i32 1
  store i8* %".374", i8** %".375"
  %".377" = getelementptr {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %".371", i32 0, i32 2
  store double              0x0, double* %".377"
  %".379" = getelementptr {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %".371", i32 0, i32 3
  store i1 false, i1* %".379"
  %"sub.16" = sub i64 0, 1
  %".381" = getelementptr {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %".371", i32 0, i32 4
  store i64 %"sub.16", i64* %".381"
  %"sub.17" = sub i64 0, 1
  %".383" = getelementptr {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %".371", i32 0, i32 5
  store i64 %"sub.17", i64* %".383"
  %".385" = getelementptr {{i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, i64}, {{i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, i64}* %".362", i32 0, i32 0
  %".386" = load {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %".371"
  store {i64, i8*, double, i1, i64, i64} %".386", {i64, i8*, double, i1, i64, i64}* %".385"
  %".388" = getelementptr {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* null, i32 1
  %".389" = ptrtoint {i64, i8*, double, i1, i64, i64}* %".388" to i64
  %".390" = call ccc i8* @"malloc"(i64 %".389")
  %".391" = load i64, i64* @"allocation_count"
  %".392" = getelementptr inbounds [100 x i8*], [100 x i8*]* @"allocation_array", i64 0, i64 %".391"
  store i8* %".390", i8** %".392"
  %".394" = add i64 %".391", 1
  store i64 %".394", i64* @"allocation_count"
  %".396" = bitcast i8* %".390" to {i64, i8*, double, i1, i64, i64}*
  %".397" = getelementptr {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %".396", i32 0, i32 0
  store i64 0, i64* %".397"
  %".399" = getelementptr inbounds [1 x i8], [1 x i8]* @"str_62", i32 0, i32 0
  %".400" = getelementptr {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %".396", i32 0, i32 1
  store i8* %".399", i8** %".400"
  %".402" = getelementptr {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %".396", i32 0, i32 2
  store double              0x0, double* %".402"
  %".404" = getelementptr {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %".396", i32 0, i32 3
  store i1 false, i1* %".404"
  %"sub.18" = sub i64 0, 1
  %".406" = getelementptr {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %".396", i32 0, i32 4
  store i64 %"sub.18", i64* %".406"
  %"sub.19" = sub i64 0, 1
  %".408" = getelementptr {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %".396", i32 0, i32 5
  store i64 %"sub.19", i64* %".408"
  %".410" = getelementptr {{i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, i64}, {{i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, i64}* %".362", i32 0, i32 1
  %".411" = load {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %".396"
  store {i64, i8*, double, i1, i64, i64} %".411", {i64, i8*, double, i1, i64, i64}* %".410"
  %".413" = getelementptr {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* null, i32 1
  %".414" = ptrtoint {i64, i8*, double, i1, i64, i64}* %".413" to i64
  %".415" = call ccc i8* @"malloc"(i64 %".414")
  %".416" = load i64, i64* @"allocation_count"
  %".417" = getelementptr inbounds [100 x i8*], [100 x i8*]* @"allocation_array", i64 0, i64 %".416"
  store i8* %".415", i8** %".417"
  %".419" = add i64 %".416", 1
  store i64 %".419", i64* @"allocation_count"
  %".421" = bitcast i8* %".415" to {i64, i8*, double, i1, i64, i64}*
  %".422" = getelementptr {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %".421", i32 0, i32 0
  store i64 0, i64* %".422"
  %".424" = getelementptr inbounds [1 x i8], [1 x i8]* @"str_63", i32 0, i32 0
  %".425" = getelementptr {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %".421", i32 0, i32 1
  store i8* %".424", i8** %".425"
  %".427" = getelementptr {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %".421", i32 0, i32 2
  store double              0x0, double* %".427"
  %".429" = getelementptr {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %".421", i32 0, i32 3
  store i1 false, i1* %".429"
  %"sub.20" = sub i64 0, 1
  %".431" = getelementptr {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %".421", i32 0, i32 4
  store i64 %"sub.20", i64* %".431"
  %"sub.21" = sub i64 0, 1
  %".433" = getelementptr {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %".421", i32 0, i32 5
  store i64 %"sub.21", i64* %".433"
  %".435" = getelementptr {{i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, i64}, {{i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, i64}* %".362", i32 0, i32 2
  %".436" = load {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %".421"
  store {i64, i8*, double, i1, i64, i64} %".436", {i64, i8*, double, i1, i64, i64}* %".435"
  %".438" = getelementptr {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* null, i32 1
  %".439" = ptrtoint {i64, i8*, double, i1, i64, i64}* %".438" to i64
  %".440" = call ccc i8* @"malloc"(i64 %".439")
  %".441" = load i64, i64* @"allocation_count"
  %".442" = getelementptr inbounds [100 x i8*], [100 x i8*]* @"allocation_array", i64 0, i64 %".441"
  store i8* %".440", i8** %".442"
  %".444" = add i64 %".441", 1
  store i64 %".444", i64* @"allocation_count"
  %".446" = bitcast i8* %".440" to {i64, i8*, double, i1, i64, i64}*
  %".447" = getelementptr {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %".446", i32 0, i32 0
  store i64 0, i64* %".447"
  %".449" = getelementptr inbounds [1 x i8], [1 x i8]* @"str_64", i32 0, i32 0
  %".450" = getelementptr {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %".446", i32 0, i32 1
  store i8* %".449", i8** %".450"
  %".452" = getelementptr {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %".446", i32 0, i32 2
  store double              0x0, double* %".452"
  %".454" = getelementptr {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %".446", i32 0, i32 3
  store i1 false, i1* %".454"
  %"sub.22" = sub i64 0, 1
  %".456" = getelementptr {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %".446", i32 0, i32 4
  store i64 %"sub.22", i64* %".456"
  %"sub.23" = sub i64 0, 1
  %".458" = getelementptr {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %".446", i32 0, i32 5
  store i64 %"sub.23", i64* %".458"
  %".460" = getelementptr {{i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, i64}, {{i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, i64}* %".362", i32 0, i32 3
  %".461" = load {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %".446"
  store {i64, i8*, double, i1, i64, i64} %".461", {i64, i8*, double, i1, i64, i64}* %".460"
  %".463" = getelementptr {{i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, i64}, {{i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, i64}* %".362", i32 0, i32 4
  store i64 0, i64* %".463"
  store {{i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, i64}* %".362", {{i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}, i64}** @"items_array"
  %".466" = getelementptr inbounds [36 x i8], [36 x i8]* @"str_65", i32 0, i32 0
  %".467" = getelementptr inbounds [4 x i8], [4 x i8]* @"fmt_str_66", i32 0, i32 0
  %".468" = call ccc i32 (i8*, ...) @"printf"(i8* %".467", i8* %".466")
  %".469" = getelementptr inbounds [1 x i8], [1 x i8]* @"str_67", i32 0, i32 0
  %".470" = getelementptr inbounds [4 x i8], [4 x i8]* @"fmt_str_68", i32 0, i32 0
  %".471" = call ccc i32 (i8*, ...) @"printf"(i8* %".470", i8* %".469")
  %".472" = getelementptr inbounds [5 x i8], [5 x i8]* @"str_69", i32 0, i32 0
  %".473" = getelementptr inbounds [6 x i8], [6 x i8]* @"str_70", i32 0, i32 0
  %".474" = call {i64, i8*, double, i1, i64, i64}* @"make_string"(i8* %".473")
  call void @"put_user"(i8* %".472", {i64, i8*, double, i1, i64, i64}* %".474")
  %".476" = getelementptr inbounds [4 x i8], [4 x i8]* @"str_71", i32 0, i32 0
  %".477" = call {i64, i8*, double, i1, i64, i64}* @"make_number"(double 0x403e000000000000)
  call void @"put_user"(i8* %".476", {i64, i8*, double, i1, i64, i64}* %".477")
  %".479" = call {i64, i8*, double, i1, i64, i64}* @"make_number"(double 0x3ff0000000000000)
  call void @"push_item"({i64, i8*, double, i1, i64, i64}* %".479")
  %".481" = call {i64, i8*, double, i1, i64, i64}* @"make_number"(double 0x4000000000000000)
  call void @"push_item"({i64, i8*, double, i1, i64, i64}* %".481")
  %".483" = call {i64, i8*, double, i1, i64, i64}* @"make_number"(double 0x4008000000000000)
  call void @"push_item"({i64, i8*, double, i1, i64, i64}* %".483")
  %".485" = getelementptr inbounds [5 x i8], [5 x i8]* @"str_72", i32 0, i32 0
  %".486" = call {i64, i8*, double, i1, i64, i64}* @"make_object"(i64 1)
  call void @"put_main"(i8* %".485", {i64, i8*, double, i1, i64, i64}* %".486")
  %".488" = getelementptr inbounds [6 x i8], [6 x i8]* @"str_73", i32 0, i32 0
  %".489" = call {i64, i8*, double, i1, i64, i64}* @"make_array"(i64 0)
  call void @"put_main"(i8* %".488", {i64, i8*, double, i1, i64, i64}* %".489")
  %".491" = getelementptr inbounds [35 x i8], [35 x i8]* @"str_74", i32 0, i32 0
  %".492" = getelementptr inbounds [4 x i8], [4 x i8]* @"fmt_str_75", i32 0, i32 0
  %".493" = call ccc i32 (i8*, ...) @"printf"(i8* %".492", i8* %".491")
  %".494" = getelementptr inbounds [1 x i8], [1 x i8]* @"str_76", i32 0, i32 0
  %".495" = getelementptr inbounds [4 x i8], [4 x i8]* @"fmt_str_77", i32 0, i32 0
  %".496" = call ccc i32 (i8*, ...) @"printf"(i8* %".495", i8* %".494")
  %".497" = getelementptr inbounds [34 x i8], [34 x i8]* @"str_78", i32 0, i32 0
  %".498" = getelementptr inbounds [4 x i8], [4 x i8]* @"fmt_str_79", i32 0, i32 0
  %".499" = call ccc i32 (i8*, ...) @"printf"(i8* %".498", i8* %".497")
  %".500" = getelementptr inbounds [5 x i8], [5 x i8]* @"str_80", i32 0, i32 0
  %".501" = call {i64, i8*, double, i1, i64, i64}* @"get_main"(i8* %".500")
  store {i64, i8*, double, i1, i64, i64}* %".501", {i64, i8*, double, i1, i64, i64}** @"user_obj"
  %".503" = load {i64, i8*, double, i1, i64, i64}*, {i64, i8*, double, i1, i64, i64}** @"user_obj"
  %".504" = getelementptr {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %".503", i32 0, i32 0
  %".505" = load i64, i64* %".504"
  %"TYPE_OBJECT" = load i64, i64* @"TYPE_OBJECT"
  %"eq" = icmp eq i64 %".505", %"TYPE_OBJECT"
  br i1 %"eq", label %"then", label %"endif"
then:
  %".507" = getelementptr inbounds [22 x i8], [22 x i8]* @"str_81", i32 0, i32 0
  %".508" = getelementptr inbounds [4 x i8], [4 x i8]* @"fmt_str_82", i32 0, i32 0
  %".509" = call ccc i32 (i8*, ...) @"printf"(i8* %".508", i8* %".507")
  %".510" = getelementptr inbounds [5 x i8], [5 x i8]* @"str_83", i32 0, i32 0
  %".511" = call {i64, i8*, double, i1, i64, i64}* @"get_user"(i8* %".510")
  %"user_name" = alloca {i64, i8*, double, i1, i64, i64}*
  store {i64, i8*, double, i1, i64, i64}* %".511", {i64, i8*, double, i1, i64, i64}** %"user_name"
  %".513" = load {i64, i8*, double, i1, i64, i64}*, {i64, i8*, double, i1, i64, i64}** %"user_name"
  %".514" = getelementptr {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %".513", i32 0, i32 0
  %".515" = load i64, i64* %".514"
  %"TYPE_STRING" = load i64, i64* @"TYPE_STRING"
  %"eq.1" = icmp eq i64 %".515", %"TYPE_STRING"
  br i1 %"eq.1", label %"then.1", label %"endif.1"
endif:
  %".567" = getelementptr inbounds [6 x i8], [6 x i8]* @"str_89", i32 0, i32 0
  %".568" = call {i64, i8*, double, i1, i64, i64}* @"get_main"(i8* %".567")
  store {i64, i8*, double, i1, i64, i64}* %".568", {i64, i8*, double, i1, i64, i64}** @"items_obj"
  %".570" = load {i64, i8*, double, i1, i64, i64}*, {i64, i8*, double, i1, i64, i64}** @"items_obj"
  %".571" = getelementptr {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %".570", i32 0, i32 0
  %".572" = load i64, i64* %".571"
  %"TYPE_ARRAY" = load i64, i64* @"TYPE_ARRAY"
  %"eq.3" = icmp eq i64 %".572", %"TYPE_ARRAY"
  br i1 %"eq.3", label %"then.3", label %"endif.3"
then.1:
  %".517" = getelementptr inbounds [7 x i8], [7 x i8]* @"str_84", i32 0, i32 0
  %".518" = load {i64, i8*, double, i1, i64, i64}*, {i64, i8*, double, i1, i64, i64}** %"user_name"
  %".519" = getelementptr {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %".518", i32 0, i32 1
  %".520" = load i8*, i8** %".519"
  %".521" = call ccc i64 @"strlen"(i8* %".517")
  %".522" = call ccc i64 @"strlen"(i8* %".520")
  %".523" = add i64 %".521", %".522"
  %".524" = add i64 %".523", 1
  %".525" = call ccc i8* @"malloc"(i64 %".524")
  %".526" = load i64, i64* @"allocation_count"
  %".527" = getelementptr inbounds [100 x i8*], [100 x i8*]* @"allocation_array", i64 0, i64 %".526"
  store i8* %".525", i8** %".527"
  %".529" = add i64 %".526", 1
  store i64 %".529", i64* @"allocation_count"
  %".531" = call ccc i8* @"strcpy"(i8* %".525", i8* %".517")
  %".532" = call ccc i8* @"strcat"(i8* %".525", i8* %".520")
  %".533" = getelementptr inbounds [4 x i8], [4 x i8]* @"fmt_str_85", i32 0, i32 0
  %".534" = call ccc i32 (i8*, ...) @"printf"(i8* %".533", i8* %".525")
  br label %"endif.1"
endif.1:
  %".536" = getelementptr inbounds [4 x i8], [4 x i8]* @"str_86", i32 0, i32 0
  %".537" = call {i64, i8*, double, i1, i64, i64}* @"get_user"(i8* %".536")
  %"user_age" = alloca {i64, i8*, double, i1, i64, i64}*
  store {i64, i8*, double, i1, i64, i64}* %".537", {i64, i8*, double, i1, i64, i64}** %"user_age"
  %".539" = load {i64, i8*, double, i1, i64, i64}*, {i64, i8*, double, i1, i64, i64}** %"user_age"
  %".540" = getelementptr {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %".539", i32 0, i32 0
  %".541" = load i64, i64* %".540"
  %"TYPE_NUMBER" = load i64, i64* @"TYPE_NUMBER"
  %"eq.2" = icmp eq i64 %".541", %"TYPE_NUMBER"
  br i1 %"eq.2", label %"then.2", label %"endif.2"
then.2:
  %".543" = getelementptr inbounds [8 x i8], [8 x i8]* @"str_87", i32 0, i32 0
  %".544" = load {i64, i8*, double, i1, i64, i64}*, {i64, i8*, double, i1, i64, i64}** %"user_age"
  %".545" = getelementptr {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %".544", i32 0, i32 2
  %".546" = load double, double* %".545"
  %".547" = load {i64, i8*, double, i1, i64, i64}*, {i64, i8*, double, i1, i64, i64}** %"user_age"
  %".548" = getelementptr {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %".547", i32 0, i32 2
  %".549" = load double, double* %".548"
  %".550" = call ccc i8* @"to_str_float"(double %".549")
  %".551" = call ccc i64 @"strlen"(i8* %".543")
  %".552" = call ccc i64 @"strlen"(i8* %".550")
  %".553" = add i64 %".551", %".552"
  %".554" = add i64 %".553", 1
  %".555" = call ccc i8* @"malloc"(i64 %".554")
  %".556" = load i64, i64* @"allocation_count"
  %".557" = getelementptr inbounds [100 x i8*], [100 x i8*]* @"allocation_array", i64 0, i64 %".556"
  store i8* %".555", i8** %".557"
  %".559" = add i64 %".556", 1
  store i64 %".559", i64* @"allocation_count"
  %".561" = call ccc i8* @"strcpy"(i8* %".555", i8* %".543")
  %".562" = call ccc i8* @"strcat"(i8* %".555", i8* %".550")
  %".563" = getelementptr inbounds [4 x i8], [4 x i8]* @"fmt_str_88", i32 0, i32 0
  %".564" = call ccc i32 (i8*, ...) @"printf"(i8* %".563", i8* %".555")
  br label %"endif.2"
endif.2:
  br label %"endif"
then.3:
  %".574" = getelementptr inbounds [22 x i8], [22 x i8]* @"str_90", i32 0, i32 0
  %".575" = getelementptr inbounds [4 x i8], [4 x i8]* @"fmt_str_91", i32 0, i32 0
  %".576" = call ccc i32 (i8*, ...) @"printf"(i8* %".575", i8* %".574")
  %".577" = call {i64, i8*, double, i1, i64, i64}* @"get_item"(i64 0)
  %"item1" = alloca {i64, i8*, double, i1, i64, i64}*
  store {i64, i8*, double, i1, i64, i64}* %".577", {i64, i8*, double, i1, i64, i64}** %"item1"
  %".579" = getelementptr inbounds [9 x i8], [9 x i8]* @"str_92", i32 0, i32 0
  %".580" = load {i64, i8*, double, i1, i64, i64}*, {i64, i8*, double, i1, i64, i64}** %"item1"
  %".581" = getelementptr {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %".580", i32 0, i32 2
  %".582" = load double, double* %".581"
  %".583" = load {i64, i8*, double, i1, i64, i64}*, {i64, i8*, double, i1, i64, i64}** %"item1"
  %".584" = getelementptr {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %".583", i32 0, i32 2
  %".585" = load double, double* %".584"
  %".586" = call ccc i8* @"to_str_float"(double %".585")
  %".587" = call ccc i64 @"strlen"(i8* %".579")
  %".588" = call ccc i64 @"strlen"(i8* %".586")
  %".589" = add i64 %".587", %".588"
  %".590" = add i64 %".589", 1
  %".591" = call ccc i8* @"malloc"(i64 %".590")
  %".592" = load i64, i64* @"allocation_count"
  %".593" = getelementptr inbounds [100 x i8*], [100 x i8*]* @"allocation_array", i64 0, i64 %".592"
  store i8* %".591", i8** %".593"
  %".595" = add i64 %".592", 1
  store i64 %".595", i64* @"allocation_count"
  %".597" = call ccc i8* @"strcpy"(i8* %".591", i8* %".579")
  %".598" = call ccc i8* @"strcat"(i8* %".591", i8* %".586")
  %".599" = getelementptr inbounds [4 x i8], [4 x i8]* @"fmt_str_93", i32 0, i32 0
  %".600" = call ccc i32 (i8*, ...) @"printf"(i8* %".599", i8* %".591")
  %".601" = call {i64, i8*, double, i1, i64, i64}* @"get_item"(i64 1)
  %"item2" = alloca {i64, i8*, double, i1, i64, i64}*
  store {i64, i8*, double, i1, i64, i64}* %".601", {i64, i8*, double, i1, i64, i64}** %"item2"
  %".603" = getelementptr inbounds [9 x i8], [9 x i8]* @"str_94", i32 0, i32 0
  %".604" = load {i64, i8*, double, i1, i64, i64}*, {i64, i8*, double, i1, i64, i64}** %"item2"
  %".605" = getelementptr {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %".604", i32 0, i32 2
  %".606" = load double, double* %".605"
  %".607" = load {i64, i8*, double, i1, i64, i64}*, {i64, i8*, double, i1, i64, i64}** %"item2"
  %".608" = getelementptr {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %".607", i32 0, i32 2
  %".609" = load double, double* %".608"
  %".610" = call ccc i8* @"to_str_float"(double %".609")
  %".611" = call ccc i64 @"strlen"(i8* %".603")
  %".612" = call ccc i64 @"strlen"(i8* %".610")
  %".613" = add i64 %".611", %".612"
  %".614" = add i64 %".613", 1
  %".615" = call ccc i8* @"malloc"(i64 %".614")
  %".616" = load i64, i64* @"allocation_count"
  %".617" = getelementptr inbounds [100 x i8*], [100 x i8*]* @"allocation_array", i64 0, i64 %".616"
  store i8* %".615", i8** %".617"
  %".619" = add i64 %".616", 1
  store i64 %".619", i64* @"allocation_count"
  %".621" = call ccc i8* @"strcpy"(i8* %".615", i8* %".603")
  %".622" = call ccc i8* @"strcat"(i8* %".615", i8* %".610")
  %".623" = getelementptr inbounds [4 x i8], [4 x i8]* @"fmt_str_95", i32 0, i32 0
  %".624" = call ccc i32 (i8*, ...) @"printf"(i8* %".623", i8* %".615")
  %".625" = call {i64, i8*, double, i1, i64, i64}* @"get_item"(i64 2)
  %"item3" = alloca {i64, i8*, double, i1, i64, i64}*
  store {i64, i8*, double, i1, i64, i64}* %".625", {i64, i8*, double, i1, i64, i64}** %"item3"
  %".627" = getelementptr inbounds [9 x i8], [9 x i8]* @"str_96", i32 0, i32 0
  %".628" = load {i64, i8*, double, i1, i64, i64}*, {i64, i8*, double, i1, i64, i64}** %"item3"
  %".629" = getelementptr {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %".628", i32 0, i32 2
  %".630" = load double, double* %".629"
  %".631" = load {i64, i8*, double, i1, i64, i64}*, {i64, i8*, double, i1, i64, i64}** %"item3"
  %".632" = getelementptr {i64, i8*, double, i1, i64, i64}, {i64, i8*, double, i1, i64, i64}* %".631", i32 0, i32 2
  %".633" = load double, double* %".632"
  %".634" = call ccc i8* @"to_str_float"(double %".633")
  %".635" = call ccc i64 @"strlen"(i8* %".627")
  %".636" = call ccc i64 @"strlen"(i8* %".634")
  %".637" = add i64 %".635", %".636"
  %".638" = add i64 %".637", 1
  %".639" = call ccc i8* @"malloc"(i64 %".638")
  %".640" = load i64, i64* @"allocation_count"
  %".641" = getelementptr inbounds [100 x i8*], [100 x i8*]* @"allocation_array", i64 0, i64 %".640"
  store i8* %".639", i8** %".641"
  %".643" = add i64 %".640", 1
  store i64 %".643", i64* @"allocation_count"
  %".645" = call ccc i8* @"strcpy"(i8* %".639", i8* %".627")
  %".646" = call ccc i8* @"strcat"(i8* %".639", i8* %".634")
  %".647" = getelementptr inbounds [4 x i8], [4 x i8]* @"fmt_str_97", i32 0, i32 0
  %".648" = call ccc i32 (i8*, ...) @"printf"(i8* %".647", i8* %".639")
  br label %"endif.3"
endif.3:
  %".650" = getelementptr inbounds [1 x i8], [1 x i8]* @"str_98", i32 0, i32 0
  %".651" = getelementptr inbounds [4 x i8], [4 x i8]* @"fmt_str_99", i32 0, i32 0
  %".652" = call ccc i32 (i8*, ...) @"printf"(i8* %".651", i8* %".650")
  %".653" = getelementptr inbounds [28 x i8], [28 x i8]* @"str_100", i32 0, i32 0
  %".654" = getelementptr inbounds [4 x i8], [4 x i8]* @"fmt_str_101", i32 0, i32 0
  %".655" = call ccc i32 (i8*, ...) @"printf"(i8* %".654", i8* %".653")
  %".656" = getelementptr inbounds [40 x i8], [40 x i8]* @"str_102", i32 0, i32 0
  %".657" = getelementptr inbounds [4 x i8], [4 x i8]* @"fmt_str_103", i32 0, i32 0
  %".658" = call ccc i32 (i8*, ...) @"printf"(i8* %".657", i8* %".656")
  %".659" = getelementptr inbounds [36 x i8], [36 x i8]* @"str_104", i32 0, i32 0
  %".660" = getelementptr inbounds [4 x i8], [4 x i8]* @"fmt_str_105", i32 0, i32 0
  %".661" = call ccc i32 (i8*, ...) @"printf"(i8* %".660", i8* %".659")
  %".662" = getelementptr inbounds [27 x i8], [27 x i8]* @"str_106", i32 0, i32 0
  %".663" = getelementptr inbounds [4 x i8], [4 x i8]* @"fmt_str_107", i32 0, i32 0
  %".664" = call ccc i32 (i8*, ...) @"printf"(i8* %".663", i8* %".662")
  %".665" = getelementptr inbounds [29 x i8], [29 x i8]* @"str_108", i32 0, i32 0
  %".666" = getelementptr inbounds [4 x i8], [4 x i8]* @"fmt_str_109", i32 0, i32 0
  %".667" = call ccc i32 (i8*, ...) @"printf"(i8* %".666", i8* %".665")
  %".668" = getelementptr inbounds [34 x i8], [34 x i8]* @"str_110", i32 0, i32 0
  %".669" = getelementptr inbounds [4 x i8], [4 x i8]* @"fmt_str_111", i32 0, i32 0
  %".670" = call ccc i32 (i8*, ...) @"printf"(i8* %".669", i8* %".668")
  %".671" = getelementptr inbounds [1 x i8], [1 x i8]* @"str_112", i32 0, i32 0
  %".672" = getelementptr inbounds [4 x i8], [4 x i8]* @"fmt_str_113", i32 0, i32 0
  %".673" = call ccc i32 (i8*, ...) @"printf"(i8* %".672", i8* %".671")
  %".674" = getelementptr inbounds [59 x i8], [59 x i8]* @"str_114", i32 0, i32 0
  %".675" = getelementptr inbounds [4 x i8], [4 x i8]* @"fmt_str_115", i32 0, i32 0
  %".676" = call ccc i32 (i8*, ...) @"printf"(i8* %".675", i8* %".674")
  %".677" = load i64, i64* @"allocation_count"
  %"cleanup_i" = alloca i64
  store i64 0, i64* %"cleanup_i"
  br label %"cleanup_cond"
cleanup_cond:
  %".680" = load i64, i64* %"cleanup_i"
  %".681" = icmp slt i64 %".680", %".677"
  br i1 %".681", label %"cleanup_body", label %"cleanup_end"
cleanup_body:
  %".683" = getelementptr inbounds [100 x i8*], [100 x i8*]* @"allocation_array", i64 0, i64 %".680"
  %".684" = load i8*, i8** %".683"
  call ccc void @"free"(i8* %".684")
  %".686" = add i64 %".680", 1
  store i64 %".686", i64* %"cleanup_i"
  br label %"cleanup_cond"
cleanup_end:
  ret i32 0
}

@"allocation_array" = internal global [100 x i8*] zeroinitializer
@"allocation_count" = internal global i64 0
@"str_45" = internal constant [1 x i8] c"\00"
@"str_46" = internal constant [1 x i8] c"\00"
@"str_47" = internal constant [1 x i8] c"\00"
@"str_48" = internal constant [1 x i8] c"\00"
@"str_49" = internal constant [1 x i8] c"\00"
@"str_50" = internal constant [1 x i8] c"\00"
@"str_51" = internal constant [1 x i8] c"\00"
@"str_52" = internal constant [1 x i8] c"\00"
@"str_53" = internal constant [1 x i8] c"\00"
@"str_54" = internal constant [1 x i8] c"\00"
@"str_55" = internal constant [1 x i8] c"\00"
@"str_56" = internal constant [1 x i8] c"\00"
@"str_57" = internal constant [1 x i8] c"\00"
@"str_58" = internal constant [1 x i8] c"\00"
@"str_59" = internal constant [1 x i8] c"\00"
@"str_60" = internal constant [1 x i8] c"\00"
@"str_61" = internal constant [1 x i8] c"\00"
@"str_62" = internal constant [1 x i8] c"\00"
@"str_63" = internal constant [1 x i8] c"\00"
@"str_64" = internal constant [1 x i8] c"\00"
@"str_65" = internal constant [36 x i8] c"=== DEMONSTRA\c3\87\c3\83O HASHMAP JSON ===\00"
@"fmt_str_66" = internal constant [4 x i8] c"%s\0a\00"
@"str_67" = internal constant [1 x i8] c"\00"
@"fmt_str_68" = internal constant [4 x i8] c"%s\0a\00"
@"str_69" = internal constant [5 x i8] c"name\00"
@"str_70" = internal constant [6 x i8] c"Jo\c3\a3o\00"
@"str_71" = internal constant [4 x i8] c"age\00"
@"str_72" = internal constant [5 x i8] c"user\00"
@"str_73" = internal constant [6 x i8] c"items\00"
@"str_74" = internal constant [35 x i8] c"Estrutura JSON criada com sucesso!\00"
@"fmt_str_75" = internal constant [4 x i8] c"%s\0a\00"
@"str_76" = internal constant [1 x i8] c"\00"
@"fmt_str_77" = internal constant [4 x i8] c"%s\0a\00"
@"str_78" = internal constant [34 x i8] c"=== TESTE DE ACESSO AOS DADOS ===\00"
@"fmt_str_79" = internal constant [4 x i8] c"%s\0a\00"
@"str_80" = internal constant [5 x i8] c"user\00"
@"str_81" = internal constant [22 x i8] c"Encontrou objeto user\00"
@"fmt_str_82" = internal constant [4 x i8] c"%s\0a\00"
@"str_83" = internal constant [5 x i8] c"name\00"
@"str_84" = internal constant [7 x i8] c"Nome: \00"
@"fmt_str_85" = internal constant [4 x i8] c"%s\0a\00"
@"str_86" = internal constant [4 x i8] c"age\00"
@"str_87" = internal constant [8 x i8] c"Idade: \00"
@"fmt_str_88" = internal constant [4 x i8] c"%s\0a\00"
@"str_89" = internal constant [6 x i8] c"items\00"
@"str_90" = internal constant [22 x i8] c"Encontrou array items\00"
@"fmt_str_91" = internal constant [4 x i8] c"%s\0a\00"
@"str_92" = internal constant [9 x i8] c"Item 1: \00"
@"fmt_str_93" = internal constant [4 x i8] c"%s\0a\00"
@"str_94" = internal constant [9 x i8] c"Item 2: \00"
@"fmt_str_95" = internal constant [4 x i8] c"%s\0a\00"
@"str_96" = internal constant [9 x i8] c"Item 3: \00"
@"fmt_str_97" = internal constant [4 x i8] c"%s\0a\00"
@"str_98" = internal constant [1 x i8] c"\00"
@"fmt_str_99" = internal constant [4 x i8] c"%s\0a\00"
@"str_100" = internal constant [28 x i8] c"=== ESTRUTURA FUNCIONAL ===\00"
@"fmt_str_101" = internal constant [4 x i8] c"%s\0a\00"
@"str_102" = internal constant [40 x i8] c"\e2\9c\93 Struct Any para todos os tipos JSON\00"
@"fmt_str_103" = internal constant [4 x i8] c"%s\0a\00"
@"str_104" = internal constant [36 x i8] c"\e2\9c\93 HashMap simples com aninhamento\00"
@"fmt_str_105" = internal constant [4 x i8] c"%s\0a\00"
@"str_106" = internal constant [27 x i8] c"\e2\9c\93 Arrays JSON funcionais\00"
@"fmt_str_107" = internal constant [4 x i8] c"%s\0a\00"
@"str_108" = internal constant [29 x i8] c"\e2\9c\93 Acesso a dados aninhados\00"
@"fmt_str_109" = internal constant [4 x i8] c"%s\0a\00"
@"str_110" = internal constant [34 x i8] c"\e2\9c\93 Base s\c3\b3lida para JSON parser\00"
@"fmt_str_111" = internal constant [4 x i8] c"%s\0a\00"
@"str_112" = internal constant [1 x i8] c"\00"
@"fmt_str_113" = internal constant [4 x i8] c"%s\0a\00"
@"str_114" = internal constant [59 x i8] c"Este \c3\a9 um exemplo funcional de hashmap para JSON em Noxy!\00"
@"fmt_str_115" = internal constant [4 x i8] c"%s\0a\00"
@"str_116" = internal constant [1 x i8] c"\00"
@"str_117" = internal constant [1 x i8] c"\00"
@"str_118" = internal constant [1 x i8] c"\00"
@"str_119" = internal constant [1 x i8] c"\00"
@"str_120" = internal constant [1 x i8] c"\00"
@"str_121" = internal constant [1 x i8] c"\00"
@"str_122" = internal constant [1 x i8] c"\00"
Gerando IR LLVM...
Configurando target...
Triple: x86_64-w64-windows-gnu
Target criado: <Target x86-64 (64-bit X86: EM64T and AMD64)>
Configurando target machine para Windows...
Target machine criada: <llvmlite.binding.targets.TargetMachine object at 0x0000024C28AFAAD0>
Parseando assembly...
Erro de compilaþÒo: Erro: Erro na geraþÒo de c¾digo LLVM: LLVM IR parsing error
<string>:831:7: error: value doesn't match function result type '{ i64, i8*, double, i1, i64, i64 }*'
  ret {i64, i8*, double, i1, i64, i64} %".16"
      ^

Isso pode ser causado por um problema no c¾digo Noxy, como:
- Acesso incorreto a campos de struct
- Tipos incompatÝveis em express§es
- Uso de varißveis nÒo declaradas
ERRO DE GERAÃ├O DE CËDIGO:
Erro: Erro na geraþÒo de c¾digo LLVM: LLVM IR parsing error
<string>:831:7: error: value doesn't match function result type '{ i64, i8*, double, i1, i64, i64 }*'
  ret {i64, i8*, double, i1, i64, i64} %".16"
      ^

Isso pode ser causado por um problema no c¾digo Noxy, como:
- Acesso incorreto a campos de struct
- Tipos incompatÝveis em express§es
- Uso de varißveis nÒo declaradas
